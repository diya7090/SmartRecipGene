@model SmartRecipGene.Models.Recipe

@{
    ViewData["Title"] = "Recipe Details";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h3 class="mb-0">Recipe Details</h3>
            <div>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-light mr-2">
                    <i class="fas fa-edit"></i> Edit
                </a>
                <a asp-action="Index" class="btn btn-light">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
            </div>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" alt="@Model.Title" class="img-fluid rounded mb-3" style="max-height: 300px; width: 100%; object-fit: cover;">
                    }
                    <h4 class="mb-3">@Model.Title</h4>
                    <div class="recipe-meta mb-4">
                        <span class="badge badge-primary mr-2">
                            <i class="fas fa-clock"></i> @Model.CookingTime minutes
                        </span>
                        <span class="badge badge-success mr-2">
                            <i class="fas fa-users"></i> @Model.Servings servings
                        </span>
                        <span class="badge badge-info mr-2">
                            <i class="fas fa-utensils"></i> @Model.CusineType
                        </span>
                        <span class="badge badge-warning">
                            <i class="fas fa-layer-group"></i> @Model.DifficultyLevel
                        </span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-3">
                        <div class="card-header bg-light">
                            <h5 class="mb-0"><i class="fas fa-info-circle"></i> Recipe Information</h5>
                        </div>
                        <div class="card-body">
                            <dl class="row mb-0">
                                <dt class="col-sm-4">Diet Type</dt>
                                <dd class="col-sm-8">@Model.DietType</dd>

                                <dt class="col-sm-4">Cuisine</dt>
                                <dd class="col-sm-8">@Model.CusineType</dd>

                                <dt class="col-sm-4">Difficulty</dt>
                                <dd class="col-sm-8">@Model.DifficultyLevel</dd>

                                <dt class="col-sm-4">Preparation Time</dt>
                                <dd class="col-sm-8">@Model.CookingTime minutes</dd>

                                <dt class="col-sm-4">Servings</dt>
                                <dd class="col-sm-8">@Model.Servings</dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0"><i class="fas fa-list"></i> Ingredients</h5>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(Model.Ingredients))
                            {
                                <ul class="list-group list-group-flush">
                                    @foreach (var ingredient in Model.Ingredients.Split(','))
                                    {
                                        <li class="list-group-item">@ingredient.Trim()</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p class="text-muted">No ingredients listed</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h5 class="mb-0"><i class="fas fa-tasks"></i> Instructions</h5>
                        </div>
                        <div class="card-body">
                            @if (!string.IsNullOrEmpty(Model.Instructions))
                            {
                                <p class="mb-0 white-space-pre-wrap">  @Html.Raw(Model.Instructions)</p>
                            }                      

                            else
                            {
                                <p class="text-muted">No instructions available</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .white-space-pre-wrap {
        white-space: pre-wrap;
    }

    .recipe-meta .badge {
        padding: 8px 12px;
        font-size: 0.9rem;
    }

    .badge i {
        margin-right: 5px;
    }

    .card-header h5 {
        color: #333;
        font-size: 1.1rem;
    }

    .list-group-item {
        border-left: none;
        border-right: none;
    }

        .list-group-item:first-child {
            border-top: none;
        }

        .list-group-item:last-child {
            border-bottom: none;
        }
</style>
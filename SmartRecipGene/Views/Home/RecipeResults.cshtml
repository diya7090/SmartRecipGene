@model PaginatedList<JToken>

<div class="recipe-hero d-none" >
    <div class="hero-content">
        <h1>Found Recipes</h1>
        <p>Discover delicious possibilities with your ingredients</p>
    </div>
</div>

<div class="recipe-container">
    <div class="recipe-hero">
        <div class="hero-content">
            <h1>Found Recipes</h1>
            <p>Discover delicious possibilities with your ingredients</p>
        </div>
    </div>
    
    @if (Model != null && Model.Items.Any())
    {
        <div class="recipe-grid">
            @foreach (var recipe in Model.Items)
            {
                <div class="recipe-card">
                <div class="recipe-image">
                    <img src="@recipe["image"]" alt="@recipe["title"]" />
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="favorite-icon" onclick="toggleFavorite(@recipe["id"])" data-recipe-id="@recipe["id"]">
                                <i id="fav-icon-@recipe["id"]" class="fa-heart @(recipe["isFavorite"] != null && recipe["isFavorite"].Value<bool>() ? "fas" : "far")"></i>
                            </div>
                        }
                    <div class="recipe-overlay">
                        <a href="@Url.Action("RecipeDetails", "Home", new { id = recipe["id"] })" class="view-recipe-btn">
                            <i class="fas fa-eye"></i> View Recipe
                        </a>
                    </div>
                </div>
                <div class="recipe-content">
                    <h3>@recipe["title"]</h3>
                    <div class="recipe-meta">
                        <span><i class="far fa-clock"></i> @recipe["readyInMinutes"] min</span>
                        <span><i class="fas fa-user-friends"></i> @recipe["servings"] servings</span>
                    </div>
                </div>
            </div>
            }
        </div>
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Recipe pagination">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" 
                            asp-action="GetRecipes" 
                            asp-route-page="@(Model.PageIndex - 1)"
                            asp-route-ingredients="@ViewBag.Ingredients">Previous</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Previous</span>
                        </li>
                    }

                    <li class="page-item active">
                        <span class="page-link">
                            Page @Model.PageIndex of @Model.TotalPages
                        </span>
                    </li>

                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" 
                            asp-action="GetRecipes" 
                            asp-route-page="@(Model.PageIndex + 1)"
                            asp-route-ingredients="@ViewBag.Ingredients">Next</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Next</span>
                        </li>
                    }
                </ul>
            </nav>
        }
    }
    else
    {
        <div class="no-results">
            <i class="fas fa-search"></i>
            <h2>No Recipes Found</h2>
            <p>Try different ingredients or check our popular recipes</p>
            <a href="@Url.Action("Ingredients", "Home")" class="back-button">
                <i class="fas fa-arrow-left"></i> Try Again
            </a>
        </div>
    }
</div>

<style>
    .favorite-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 2;
        cursor: pointer;
        background: rgba(255, 255, 255, 0.9);
        padding: 8px;
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .favorite-icon i {
        font-size: 1.2rem;
        color: #ff4b4b;
    }

    .favorite-icon i.far {
        color: #666;
    }

    .favorite-icon:hover i.far {
        color: #ff4b4b;
    }

    .favorite-toast {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 1rem 2rem;
        border-radius: 30px;
        z-index: 1000;
        display: none;
    }

    .favorite-toast.show {
        display: block;
        animation: fadeInOut 3s ease;
    }

    @@keyframes fadeInOut {
        0% { opacity: 0; transform: translateY(20px); }
        10% { opacity: 1; transform: translateY(0); }
        90% { opacity: 1; transform: translateY(0); }
        100% { opacity: 0; transform: translateY(20px); }
    }

    .fa-beat {
        animation: heartBeat 0.5s ease;
    }

    @@keyframes heartBeat {
        0% { transform: scale(1); }
        50% { transform: scale(1.2); }
        100% { transform: scale(1); }
    }
    .recipe-container {
        max-width: 1200px;
        margin: 0px auto 2rem;
        padding: 2rem;
        background: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        position: relative;
    }

    .recipe-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 2rem;
        padding: 1rem;
    }

    .recipe-card {
        background: white;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        height: 100%;
    }

    .recipe-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
    }

    .recipe-image {
        position: relative;
        height: 200px;
        overflow: hidden;
    }

    .recipe-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }

    .recipe-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .recipe-card:hover .recipe-overlay {
        opacity: 1;
    }

    .recipe-card:hover .recipe-image img {
        transform: scale(1.1);
    }

    .view-recipe-btn {
        color: white;
        text-decoration: none;
        padding: 0.8rem 1.5rem;
        border: 2px solid white;
        border-radius: 30px;
        font-weight: 600;
        transition: all 0.3s ease;
    }

    .view-recipe-btn:hover {
        background: white;
        color:  var(--primary-color) !important;
    }

    .recipe-content {
        padding: 1.5rem;
    }

    .recipe-content h3 {
        font-family: 'Merriweather', serif;
        color: #333;
        font-size: 1.1rem;
        margin-bottom: 1rem;
        line-height: 1.4;
        height: 2.8em;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .recipe-meta {
        display: flex;
        justify-content: space-between;
        color: #666;
        font-size: 0.9rem;
    }

    .recipe-meta span {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .recipe-meta i {
        color:  var(--primary-color) !important;
    }

    @@media (max-width: 768px) {
        .recipe-container {
            margin: -30px 1rem 2rem;

            padding: 1.5rem;
        }

        .recipe-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1.5rem;
        }
    }

    /* Keep your existing hero styles */
</style>

@*         <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        // Check initial favorite status for each recipe
        $('.recipe-card').each(function() {
            const recipeId = $(this).find('.favorite-icon').attr('onclick').match(/\d+/)[0];
            $.get(`/Home/IsFavorite/${recipeId}`, function(response) {
                if (response.isFavorite) {
                    $(`#fav-icon-${recipeId}`).removeClass('far').addClass('fas');
                }
            });
        });
    });

    function toggleFavorite(recipeId) {
        if (!recipeId) {
            showToast('Invalid recipe ID');
            return;
        }

        const icon = $(`#fav-icon-${recipeId}`);
        icon.addClass('fa-beat');
        
        $.ajax({
            url: '/Home/ToggleFavorite',
            type: 'POST',
            data: { recipeId: recipeId },
            success: function(response) {
                icon.removeClass('fa-beat');
                if (response.success) {
                    if (response.isFavorite) {
                        icon.removeClass('far').addClass('fas');
                        showToast(response.message || 'Added to favorites! ❤️');
                    } else {
                        icon.removeClass('fas').addClass('far');
                        showToast(response.message || 'Removed from favorites');
                    }
                } else {
                    showToast(response.message || 'Failed to update favorite status');
                    if (response.message === 'Please login to add favorites') {
                        window.location.href = '/Identity/Account/Login';
                    }
                }
            },
            error: function(xhr, status, error) {
                icon.removeClass('fa-beat');
                showToast('Something went wrong. Please try again.');
                console.error('Error:', error);
            }
        });
    }

    function showToast(message) {
        const toast = document.getElementById('favorite-toast');
        toast.textContent = message;
        toast.classList.add('show');
        setTimeout(() => toast.classList.remove('show'), 3000);
    }
</script>
 *@
 
 <script>
    $(document).ready(function() {
        // Check initial favorite status for each recipe
        $('.favorite-icon').each(function() {
            const recipeId = $(this).data('recipe-id');
            const icon = $(`#fav-icon-${recipeId}`);
            
            $.get(`/Home/IsFavorite/${recipeId}`, function(response) {
                if (response.isFavorite) {
                    icon.removeClass('far').addClass('fas');
                } else {
                    icon.removeClass('fas').addClass('far');
                }
            });
        });
    });

    function toggleFavorite(recipeId) {
        if (!recipeId) {
            showToast('Invalid recipe ID');
            return;
        }

        const icon = $(`#fav-icon-${recipeId}`);
        icon.addClass('fa-beat');
        
        $.ajax({
            url: '/Home/ToggleFavorite',
            type: 'POST',
            data: { recipeId: recipeId },
            success: function(response) {
                icon.removeClass('fa-beat');
                if (response.success) {
                    if (response.isFavorite) {
                        icon.removeClass('far').addClass('fas');
                        showToast('Added to favorites! ❤️');
                    } else {
                        icon.removeClass('fas').addClass('far');
                        showToast('Removed from favorites');
                    }
                } else {
                    showToast(response.message || 'Failed to update favorite status');
                    if (response.message === 'Please login to add favorites') {
                        window.location.href = '/Identity/Account/Login';
                    }
                }
            },
            error: function(xhr, status, error) {
                icon.removeClass('fa-beat');
                showToast('Something went wrong. Please try again.');
                console.error('Error:', error);
            }
        });
    }
</script>
<div id="favorite-toast" class="favorite-toast"></div>

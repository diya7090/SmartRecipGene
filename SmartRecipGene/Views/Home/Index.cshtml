
@{
    ViewData["Title"] = "Home Page";
}

<div class="hero-section">
    <div class="hero-content">
        <h1 class="hero-title">Discover Your Next Favorite Recipe</h1>
        <p class="hero-subtitle">Search from thousands of delicious recipes</p>
    </div>
</div>

<div class="search-container">
    <form method="get" asp-action="SearchRecipes" class="recipe-search-form" id="searchForm">
        <div class="search-box">
            <i class="fas fa-search search-icon"></i>
            <input type="text"
                   name="query"
                   id="searchInput"
                   class="search-input"
                   placeholder="What would you like to cook today?"
                   autocomplete="off" />
            <div id="spellingSuggestions" class="spelling-suggestions"></div>
        </div>

        <div class="filter-grid">
            <div class="filter-group">
                <label><i class="fas fa-globe-americas"></i> Cuisine</label>
                <select name="cuisine" class="filter-select">
                    <option value="">Select Cuisine</option>
                    <option value="african">African</option>
                    <option value="asian">Asian</option>
                    <option value="american">American</option>
                    <option value="british">British</option>
                    <option value="cajun">Cajun</option>
                    <option value="caribbean">Caribbean</option>
                    <option value="chinese">Chinese</option>
                    <option value="eastern european">Eastern European</option>
                    <option value="european">European</option>
                    <option value="french">French</option>
                    <option value="german">German</option>
                    <option value="greek">Greek</option>
                    <option value="indian">Indian</option>
                    <option value="irish">Irish</option>
                    <option value="italian">Italian</option>
                    <option value="japanese">Japanese</option>
                    <option value="jewish">Jewish</option>
                    <option value="korean">Korean</option>
                    <option value="latin american">Latin American</option>
                    <option value="mediterranean">Mediterranean</option>
                    <option value="mexican">Mexican</option>
                    <option value="middle eastern">Middle Eastern</option>
                    <option value="nordic">Nordic</option>
                    <option value="southern">Southern</option>
                    <option value="spanish">Spanish</option>
                    <option value="thai">Thai</option>
                    <option value="vietnamese">Vietnamese</option>
                </select>
            </div>

            <div class="filter-group">
                <label><i class="fas fa-utensils"></i> Meal Type</label>
                <select name="mealType" class="filter-select">
                    <option value="">Select Meal Type</option>
                    <option value="main course">Main Course</option>
                    <option value="lunch">Lunch</option>
                    <option value="dinner">Dinner</option>
                    <option value="side dish">Side Dish</option>
                    <option value="dessert">Dessert</option>
                    <option value="appetizer">Appetizer</option>
                    <option value="salad">Salad</option>
                    <option value="bread">Bread</option>
                    <option value="breakfast">Breakfast</option>
                    <option value="soup">Soup</option>
                    <option value="beverage">Beverage</option>
                    <option value="sauce">Sauce</option>
                    <option value="marinade">Marinade</option>
                    <option value="fingerfood">Fingerfood</option>
                    <option value="snack">Snack</option>
                    <option value="drink">Drink</option>
                </select>
            </div>

            <div class="filter-group">
                <label><i class="fas fa-leaf"></i> Dietary Restrictions</label>
                <select name="diet" class="filter-select">
                    <option value="">Any</option>
                    <option value="vegetarian">Vegetarian</option>
                    <option value="vegan">Vegan</option>
                    <option value="gluten free">Gluten Free</option>
                    <option value="egg free">Egg Free</option>
                </select>
            </div>
           
        </div>
        <!-- Add this after the search-container div -->
        
        <!-- Search Results Section -->
        <div class="recipes-section" id="searchResultsSection" style="display: none;">
            <h2 class="section-title">Search Results</h2>
            <div class="row" id="searchResults"></div>
        </div>
        <button type="submit" class="search-button">
            <i class="fas fa-search"></i> Find Recipes
        </button>



        <div class="meal-container">
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=breakfast&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/8b/c8/37/8bc8378a740f93b9dab9b28d14cd3acf.jpg" alt="Breakfast">
                <p>BREAKFAST</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=main+course&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/3e/03/0f/3e030f7fa775ab6d9e2df3c9f6980f2f.jpg" alt="Main Course">
                <p>MAIN COURSE</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=lunch&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/e5/0d/1b/e50d1b532f488e6ec32bb30e5ccdd37a.jpg" alt="Lunch">
                <p>LUNCH</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=dinner&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/f9/b0/86/f9b086aafc7e3b056b22a534291407d9.jpg" alt="Dinner">
                <p>DINNER</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=beverage&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/4d/53/f8/4d53f8e63fffc67094785ffd60e7a875.jpg" alt="Beverage">
                <p>BEVERAGE</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=dessert&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/94/7f/73/947f73a9cf310e01a7a49512b51470a3.jpg" alt="Dessert">
                <p>DESSERT</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=snack&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/3c/94/fb/3c94fbfc2b227a816c87ab6ab4191089.jpg" alt="Snack">
                <p>SNACK</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=salad&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/61/82/35/6182351b6972c5c75d9e67e2928a2677.jpg" alt="Salad">
                <p>SALAD</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=bread&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/cf/78/56/cf78568807ec5812108452d81ae9fd5e.jpg" alt="Bread">
                <p>BREAD</p>
            </a>
            <a href="https://localhost:7119/Home/SearchRecipes?query=&cuisine=&mealType=sauce&diet=" class="meal-item">
                <img src="https://i.pinimg.com/736x/a9/8f/97/a98f9751fd7a914b0fe545233e9e19c3.jpg" alt="Sauce">
                <p>SAUCE</p>
            </a>
        </div>

        <!-- Most Loved Recipes Section -->
        <div class="recipes-section">
            <h2 class="section-title">Most Loved Recipes</h2>
            <div class="scroll-container">
                <div class="recipe-scroll" id="mostLovedRecipes">
                    @foreach (var recipe in ViewBag.MostLovedRecipes ?? new List<object>())
                    {
                        <div class="recipe-card">
                            <div class="love-badge">❤️ @recipe.ReviewCount</div>
                            <img src="@recipe.ImageUrl" alt="@recipe.Title"
                                 onerror="this.src='/images/default-recipe.jpg'">
                            <div class="recipe-content">
                                <h3>@recipe.Title</h3>
                                <a href="@Url.Action("RecipeDetails", "Home", new { id = recipe.Id })"
                                   class="view-recipe-btn">View Recipe</a>
                               
                            </div>
                        </div>
                    }
                </div>
                <button class="scroll-btn prev" onclick="scrollRecipes('mostLovedRecipes', -1)">❮</button>
                <button class="scroll-btn next" onclick="scrollRecipes('mostLovedRecipes', 1)">❯</button>
            </div>
        </div>

    
        
        <!-- Recommended Recipes Section -->
        <div class="recipes-section">
            <h2 class="section-title">Recommended For You</h2>
            <div class="scroll-container">
                <div class="recipe-scroll" id="recommendedRecipes">
                    @foreach (var recipe in ViewBag.RecommendedRecipes ?? new List<object>())
                    {
                        <div class="recipe-card">
                            <img src="@recipe.ImageUrl" alt="@recipe.Title"
                                 onerror="this.src='/images/default-recipe.jpg'">
                            <div class="recipe-content">
                                <h3>@recipe.Title</h3>
                                <a href="@Url.Action("RecipeDetails", "Home", new { id = recipe.Id })"
                                   class="view-recipe-btn">View Recipe</a>
                               
                            </div>
                        </div>
                    }
                </div>
                <button class="scroll-btn prev" onclick="scrollRecipes('recommendedRecipes', -1)">❮</button>
                <button class="scroll-btn next" onclick="scrollRecipes('recommendedRecipes', 1)">❯</button>
            </div>
        </div>
        
        <!-- Add this to your scripts section -->
        <script>
            let scrollPositions = {
                mostLovedRecipes: 0,
                recommendedRecipes: 0
            };
        
            function scrollRecipes(containerId, direction) {
                event.preventDefault();
                const container = document.getElementById(containerId);
                const cardWidth = 300; // Width of each recipe card including gap
                const visibleWidth = container.parentElement.offsetWidth;
                const maxScroll = container.scrollWidth - visibleWidth;
        
                scrollPositions[containerId] += direction * cardWidth;
                scrollPositions[containerId] = Math.max(0, Math.min(scrollPositions[containerId], maxScroll));
        
                container.style.transform = `translateX(-${scrollPositions[containerId]}px)`;
            }
        
            function updateSearchResults(recipes) {
                const container = document.getElementById('searchResults');
                const section = document.getElementById('searchResultsSection');
                
                if (recipes && recipes.length > 0) {
                    container.innerHTML = recipes.map(recipe => `
                        <div class="col-md-4 mb-4">
                            <div class="recipe-card">
                                <img src="${recipe.image}" alt="${recipe.title}"
                                     onerror="this.src='/images/default-recipe.jpg'">
                                <div class="recipe-content">
                                    <h3>${recipe.title}</h3>
                                    <a href="/Home/RecipeDetails/${recipe.id}"
                                       class="view-recipe-btn">View Recipe</a>
                                </div>
                            </div>
                        </div>
                    `).join('');
                    section.style.display = 'block';
                } else {
                    container.innerHTML = '<div class="col-12 text-center"><h3>No recipes found</h3></div>';
                    section.style.display = 'block';
                }
            }
        
            // Update form submit handler
            document.getElementById('searchForm').addEventListener('submit', function(e) {
                e.preventDefault();
                const formData = new FormData(this);
                
                fetch('/Home/SearchRecipes?' + new URLSearchParams(formData).toString())
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            updateSearchResults(data.results);
                        }
                    })
                    .catch(error => console.error('Error:', error));
            });
        </script>
        
    </form>
</div>

<style>
   

.section-title {
    font-size: 2.5rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
    color: #333;
    text-align: center;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
}

.meal-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
}

.meal-item {
    text-align: center;
    width: 120px;
     text-decoration: none !important;
}

.meal-item img {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    object-fit: cover;
    transition: transform 0.3s ease-in-out;
}

.meal-item p {
    margin-top: 8px;
    font-size: 14px;
    font-weight: bold;
    color: #333;
 

}

.meal-item img:hover {
    transform: scale(1.1);
}

/* Responsive CSS */
@@media (max-width: 768px) {
    .meal-item {
        width: 100px;
    }

    .meal-item img {
        width: 80px;
        height: 80px;
    }

    .meal-item p {
        font-size: 12px;
    }
}

@@media (max-width: 480px) {
    .meal-container {
        gap: 10px;
    }

    .meal-item {
        width: 80px;
    }

    .meal-item img {
        width: 60px;
        height: 60px;
    }

    .meal-item p {
        font-size: 10px;
    }
}


.scroll-container {
    position: relative;
    overflow: hidden;
    padding: 1rem 0;
}

.recipe-scroll {
    display: flex;
    gap: 1.5rem;
    transition: transform 0.3s ease;
    padding: 0.5rem;
}

.recipe-card {
    flex: 0 0 300px;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    transition: all 0.3s;
    position: relative;
    background: white;
}

.recipe-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.recipe-card img {
    width: 100%;
    height: 200px;
    object-fit: cover;
}

.recipe-content {
    padding: 1.2rem;
}

.recipe-content h3 {
    margin: 0 0 1rem;
    font-size: 1.2rem;
    color: #333;
    font-weight: 600;
}

.love-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background: rgba(255,255,255,0.95);
    padding: 8px 15px;
    border-radius: 25px;
    font-size: 0.9rem;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.view-recipe-btn {
    display: inline-block;
    padding: 0.8rem 1.5rem;
    background:  var(--primary-color) !important;
    color: white;
    text-decoration: none;
    border-radius: 25px;
    transition: all 0.3s;
    font-weight: 500;
}

.view-recipe-btn:hover {
    background: #ff5252;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(255, 107, 107, 0.4);
}

.scroll-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255,255,255,0.95);
    border: none;
    width: 45px;
    height: 45px;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 2px 10px rgba(0,0,0,0.15);
    z-index: 2;
    transition: all 0.3s;
}

.scroll-btn.prev {
    left: 10px;
}

.scroll-btn.next {
    right: 10px;
}

.scroll-btn:hover {
    background: white;
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}

@@media (max-width: 768px) {
    .section-title {
        font-size: 2rem;
    }

    .recipe-card {
        flex: 0 0 250px;
    }

    .scroll-btn {
        width: 35px;
        height: 35px;
    }
}
    .hero-section {
        background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1543353071-087092ec393a') center/cover no-repeat;
        height: 70vh;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        color: white;
        margin-bottom: 2rem;
    }

    .hero-content {
        padding: 2rem;
        max-width: 800px;
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
    }

    .hero-subtitle {
        font-size: 1.5rem;
        opacity: 0.9;
    }

    .search-container {
        max-width: 1200px;
        margin: -100px auto 2rem;
        padding: 2rem;
        background: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        position: relative;
        z-index: 1;
    }

    .search-box {
        position: relative;
        margin-bottom: 1.5rem;
    }

    .filter-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin: 1.5rem 0;
    }

    .search-input {
        width: 100%;
        padding: 1.2rem;
        border: 2px solid #eee;
        border-radius: 50px;
        font-size: 1.1rem;
        transition: all 0.3s;
    }

        .search-input:focus {
            border-color:  var(--primary-color) !important;
            box-shadow: 0 0 0 4px rgba(255, 107, 107, 0.1);
            outline: none;
        }

    .filter-select {
        width: 100%;
        padding: 0.8rem;
        border: 2px solid #eee;
        border-radius: 10px;
        font-size: 1rem;
    }

    .search-button {
        background:  var(--primary-color) !important;
        color: white;
        border: none;
        padding: 1rem 2.5rem;
        border-radius: 50px;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.3s;
        display: block;
        margin: 2rem auto 0;
    }

        .search-button:hover {
            background: #ff5252;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.4);
        }

    .spelling-suggestions {
        position: absolute;
        width: 100%;
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        margin-top: 5px;
        display: none;
        z-index: 1000;
    }

    .suggestion-item {
        padding: 10px 15px;
        cursor: pointer;
        transition: background 0.2s;
    }

        .suggestion-item:hover {
            background: #f5f5f5;
        }

        .suggestion-item:first-child {
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
        }

        .suggestion-item:last-child {
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
        }

    @@media (max-width: 768px) {
        .hero-title {
            font-size: 2.5rem;
        }

        .search-container {
            margin: -50px 1rem 2rem;
            padding: 1.5rem;
        }
    }
</style>

<script>
   
    function scroll(containerId, direction) {
        const container = document.getElementById(containerId);
        const scrollAmount = 300 * direction;
        container.style.transform = `translateX(${-scrollAmount}px)`;
    }

    // Update recommendations when user searches
    document.getElementById('searchForm').addEventListener('submit', async function (e) {
        e.preventDefault();
        const formData = new FormData(this);
        try {
            const response = await fetch('/Home/UpdateRecommendations', {
                method: 'POST',
                body: formData
            });
            const data = await response.json();
            if (data.success) {
                updateRecommendedRecipes(data.recommendations);
            }
        } catch (error) {
            console.error('Error updating recommendations:', error);
        }
        this.submit();
    });

    function updateRecommendedRecipes(recipes) {
        const container = document.getElementById('recommendedRecipes');
        container.innerHTML = recipes.map(recipe => `
                <div class="recipe-card">
                    <img src="${recipe.imageUrl}" alt="${recipe.title}"
                         onerror="this.src='/images/default-recipe.jpg'">
                    <div class="recipe-content">
                        <h3>${recipe.title}</h3>
                        <a href="/Home/RecipeDetails/${recipe.id}"
                           class="view-recipe-btn">View Recipe</a>
                    </div>
                </div>
            `).join('');
    }
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        const suggestionsDiv = document.getElementById('spellingSuggestions');
        let typingTimer;

        searchInput.addEventListener('input', function () {
            clearTimeout(typingTimer);
            if (searchInput.value.length > 2) {
                typingTimer = setTimeout(checkSpelling, 500);
            } else {
                suggestionsDiv.style.display = 'none';
            }
        });

        async function checkSpelling() {
            const query = searchInput.value;
            try {
                const response = await fetch(`/Home/GetSpellingSuggestions?query=${encodeURIComponent(query)}`);
                const suggestions = await response.json();

                if (suggestions && suggestions.length > 0) {
                    suggestionsDiv.innerHTML = '';
                    suggestions.forEach(suggestion => {
                        const div = document.createElement('div');
                        div.className = 'suggestion-item';
                        div.textContent = suggestion;
                        div.onclick = () => {
                            searchInput.value = suggestion;
                            suggestionsDiv.style.display = 'none';
                            document.getElementById('searchForm').submit();
                        };
                        suggestionsDiv.appendChild(div);
                    });
                    suggestionsDiv.style.display = 'block';
                } else {
                    suggestionsDiv.style.display = 'none';
                }
            } catch (error) {
                console.error('Error fetching suggestions:', error);
            }
        }

        document.addEventListener('click', function (e) {
            if (!suggestionsDiv.contains(e.target) && e.target !== searchInput) {
                suggestionsDiv.style.display = 'none';
            }
        });
    });
</script>
@* 


        @model List<SmartRecipGene.Models.ShoppingListItem>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h2 class="mb-0">My Shopping List</h2>
                    <span class="badge bg-light text-primary">@Model.Count recipes</span>
                </div>
                <div class="card-body">
                    @if (!Model.Any())
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> Your shopping list is empty.
                        </div>
                    }
                    else
                    {
                        @if (TempData["Success"] != null)
                        {
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                @TempData["Success"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        }

                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Recipe ID</th>
                                        <th>Servings</th>
                                        <th>Date Added</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="@(item.Purchased ? "table-success" : "")">
                                            <td>@item.RecipeId</td>
                                            <td>
                                                <div class="input-group" style="width: 120px;">
                                                    <button class="btn btn-outline-secondary btn-sm serving-adjust"
                                                            data-recipe-id="@item.RecipeId"
                                                            data-action="decrease">
                                                        -
                                                    </button>
                                                    <input type="number" class="form-control form-control-sm servings-input"
                                                           value="@item.Servings" min="1"
                                                           data-recipe-id="@item.RecipeId" />
                                                    <button class="btn btn-outline-secondary btn-sm serving-adjust"
                                                            data-recipe-id="@item.RecipeId"
                                                            data-action="increase">
                                                        +
                                                    </button>
                                                </div>
                                            </td>
                                            <td>@item.DateAdded.ToString("MMM dd, yyyy")</td>
                                            <td>
                                                <div class="form-check">
                                                    <input type="checkbox" class="form-check-input purchase-status"
                                                    @(item.Purchased ? "checked" : "")
                                                           data-recipe-id="@item.RecipeId" />
                                                    <label class="form-check-label">
                                                        @(item.Purchased ? "Purchased" : "Pending")
                                                    </label>
                                                </div>
                                            </td>
                                            <td>
                                                <button class="btn btn-danger btn-sm remove-item"
                                                        data-recipe-id="@item.RecipeId">
                                                    <i class="fas fa-trash"></i> Remove
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Servings adjustment
            $('.serving-adjust').click(function() {
                var recipeId = $(this).data('recipe-id');
                var input = $(`.servings-input[data-recipe-id="${recipeId}"]`);
                var currentValue = parseInt(input.val());

                if ($(this).data('action') === 'increase') {
                    input.val(currentValue + 1);
                } else if (currentValue > 1) {
                    input.val(currentValue - 1);
                }

                updateServings(recipeId, input.val());
            });

            // Update purchase status
            $('.purchase-status').change(function() {
                var recipeId = $(this).data('recipe-id');
                var isPurchased = $(this).is(':checked');

                $.post('/Home/UpdatePurchaseStatus', {
                    recipeId: recipeId,
                    purchased: isPurchased
                });
            });

            // Remove item
            $('.remove-item').click(function() {
                var recipeId = $(this).data('recipe-id');
                if (confirm('Are you sure you want to remove this item?')) {
                    $.post('/Home/RemoveFromShoppingList', {
                        recipeId: recipeId
                    }).done(function() {
                        location.reload();
                    });
                }
            });

            function updateServings(recipeId, servings) {
                $.post('/Home/UpdateServings', {
                    recipeId: recipeId,
                    servings: servings
                });
            }

            // Auto-hide alerts after 5 seconds
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);
        });
    </script>
}

<style>
    .table td {
        vertical-align: middle;
    }

    .btn-sm {
        padding: .25rem .5rem;
        font-size: .875rem;
    }

    .serving-adjust {
        padding: .25rem .5rem;
    }

    .servings-input {
        text-align: center;
        padding: .25rem;
    }

    .form-check-input {
        cursor: pointer;
    }
</style> *@

            @model List<dynamic>

<div class="shopping-container mt-4">
    <div class="recipe-hero">
        <div class="hero-content">
            <h1>My Shopping List</h1>
            <p>Discover delicious possibilities with your shopping list.</p>
        </div>
    </div>
    @* @Model.Count recipes *@
    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i> Your shopping list is empty.
        </div>
    }
    else
    {
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        <div class="row">
            <div class="col-lg-8">
                @foreach (var recipe in Model)
                {
                    <div class="recipe-card mb-4">
                        <div class="recipe-header d-flex justify-content-between align-items-center bg-light p-3 rounded">
                            <h4 class="mb-0 d-flex flex-column">
                                @recipe.RecipeTitle
                                <a href="javascript:void(0);"
                                   class="fs-6 fw-normal toggle-ingredients-link text-primary"
                                   data-bs-toggle="collapse"
                                   data-bs-target="#ingredients-@recipe.RecipeId"
                                   aria-expanded="false"
                                   aria-controls="ingredients-@recipe.RecipeId">
                                    Show Ingredients
                                </a>
                            </h4>
                            <div class="recipe-meta d-flex">
                                <div class="servings-control d-inline-flex align-items-center me-3">
                                    <button class="btn btn-outline-secondary btn-sm serving-adjust"
                                            data-recipe-id="@recipe.RecipeId"
                                            data-price="@recipe.PricePerServing"
                                            data-action="decrease">
                                        -
                                    </button>
                                    <input type="number" class="form-control form-control-sm mx-2 servings-input"
                                           style="width: 60px"
                                           value="@recipe.DefaultServings"
                                           min="1"
                                           data-recipe-id="@recipe.RecipeId"
                                           data-price="@recipe.PricePerServing" />
                                    <button class="btn btn-outline-secondary btn-sm serving-adjust"
                                            data-recipe-id="@recipe.RecipeId"
                                            data-price="@recipe.PricePerServing"
                                            data-action="increase">
                                        +
                                    </button>
                                </div>
                                <div class="price-info me-3" id="price-info-@recipe.RecipeId">
                                    <span class="text-muted">Price per serving: ₹@recipe.PricePerServing.ToString("F2")</span>
                                    <br />
                                    <span class="text-primary total-price">Total: ₹@recipe.TotalPrice.ToString("F2")</span>
                                </div>
                                
                                <small class="text-muted me-3 d-none">Added: @recipe.DateAdded.ToString("MMM dd, yyyy")</small>
                                <form asp-action="RemoveFromShoppingList" method="post" class="d-inline">
                                    <input type="hidden" name="recipeId" value="@recipe.RecipeId" />
                                    <button type="submit" class="btn btn-sm">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                        <div id="ingredients-@recipe.RecipeId" class="collapse">
                            <div class="ingredients-list p-3">
                                <h5><i class="fas fa-list"></i> Ingredients:</h5>
                                <ul class="list-group">
                                    @foreach (var ingredient in recipe.Ingredients)
                                    {
                                        <li class="list-group-item">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <i class="fas fa-check-circle text-success me-2"></i>
                                                    @ingredient
                                                </div>
                                                <div class="form-check">
                                                    <input type="checkbox" class="form-check-input ingredient-check"
                                                    @(recipe.Purchased ? "checked" : "")>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col-lg-4">
                <div class="total-price-section mb-4">
                    <h4 class="text-end">
                        Total Cart Value: ₹@(Model.Sum(r => (decimal)r.TotalPrice).ToString("F2"))
                    </h4>
                    <div class="d-flex justify-content-end mt-3">
                        <form asp-action="Address" method="get">
                            <button type="submit" class="btn btn-success">
                                <i class="fas fa-shopping-cart"></i> Proceed to Address
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.serving-adjust').click(function() {
                var recipeId = $(this).data('recipe-id');
                var pricePerServing = parseFloat($(this).data('price'));
                var input = $(`.servings-input[data-recipe-id="${recipeId}"]`);
                var currentValue = parseInt(input.val());
                var minServings = parseInt(input.attr('min'));

                if ($(this).data('action') === 'increase') {
                    input.val(currentValue + 1);
                } else if (currentValue > minServings) {
                    input.val(currentValue - 1);
                }

                // Update total price immediately
                var newServings = parseInt(input.val());
                var newTotal = (pricePerServing * newServings).toFixed(2);
                $(`#price-info-${recipeId} .total-price`).text(`Total: ₹${newTotal}`);

                // Update grand total
                updateGrandTotal();

                // Send update to server
                updateServings(recipeId, newServings);
            });

            function updateGrandTotal() {
                var grandTotal = 0; 
                $('.total-price').each(function() {
                    var price = parseFloat($(this).text().replace('Total: ₹', ''));
                    grandTotal += price;
                });
                $('.total-price-section h4').text(`Total Cart Value: ₹${grandTotal.toFixed(2)}`);
            }

            function updateServings(recipeId, servings) {
                $.post('/Home/UpdateServings', {
                    recipeId: recipeId,
                    servings: servings
                });
            }

            // Initialize with minimum servings if current is less
            $('.servings-input').each(function() {
                var currentValue = parseInt($(this).val());
                var minServings = parseInt($(this).attr('min'));
                if (currentValue < minServings) {
                    $(this).val(minServings);
                    var recipeId = $(this).data('recipe-id');
                    var pricePerServing = parseFloat($(this).data('price'));
                    var newTotal = (pricePerServing * minServings).toFixed(2);
                    $(`#price-info-${recipeId} .total-price`).text(`Total: ₹${newTotal}`);
                    updateServings(recipeId, minServings);
                }
            });
        });
    </script>
}

<style>
    /* Modern Variables */
:root {
  --primary-color: #4a6fdc;
  --primary-hover: #3a5fc9;
  --secondary-color: #f8f9fa;
  --accent-color: #34c759;
  --danger-color: #ff3b30;
  --text-primary: #212529;
  --text-secondary: #6c757d;
  --border-radius: 10px;
  --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  --transition: all 0.3s ease;
  --container-padding: 24px;
}

/* Main Container Styles */
.shopping-container {
  max-width: 1200px;
  margin: 0 auto 40px;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  padding: 0 var(--container-padding);
}

/* Hero Section */
.recipe-hero {
  background: linear-gradient(135deg, var(--primary-color), #6c8dff);
  border-radius: var(--border-radius);
  padding: 40px;
  margin-bottom: 30px;
  box-shadow: var(--shadow);
  position: relative;
  overflow: hidden;
}

.hero-content {
  text-align: center;
  color: white;
  position: relative;
  z-index: 2;
}

.hero-content h1 {
  font-weight: 700;
  font-size: 2.5rem;
  margin-bottom: 10px;
}

.hero-content p {
  font-size: 1.2rem;
  opacity: 0.9;
  margin-bottom: 0;
}

/* Hero Background Pattern */
.recipe-hero::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3z' fill='white' fill-opacity='0.1' fill-rule='evenodd'/%3E%3C/svg%3E");
  opacity: 0.5;
  z-index: 1;
}

/* Alert Styles */
.alert {
  border-radius: var(--border-radius);
  padding: 16px 20px;
  margin-bottom: 25px;
  border: none;
  display: flex;
  align-items: center;
}

.alert i {
  margin-right: 10px;
  font-size: 1.1rem;
}

.alert-info {
  background-color: rgba(74, 111, 220, 0.1);
  color: var(--primary-color);
  text-align: center;
  padding: 30px;
}

.alert-success {
  background-color: rgba(52, 199, 89, 0.1);
  color: #2cb74e;
  position: relative;
}

.btn-close {
  background: none;
  border: none;
  color: currentColor;
  opacity: 0.7;
  transition: var(--transition);
}

.btn-close:hover {
  opacity: 1;
}

/* Recipe Cards */
.recipe-card {
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: var(--transition);
  border: 1px solid rgba(0, 0, 0, 0.08);
  margin-bottom: 24px;
  background-color: white;
}

.recipe-card:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.recipe-header {
  padding: 20px !important;
  background-color: var(--secondary-color) !important;
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.recipe-header h4 {
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 8px !important;
}

.toggle-ingredients-link {
  font-size: 0.85rem;
  color: var(--primary-color) !important;
  text-decoration: none;
  transition: var(--transition);
  display: inline-flex;
  align-items: center;
  margin-top: 6px;
}

.toggle-ingredients-link:hover {
  color: var(--primary-hover) !important;
  text-decoration: underline;
}

.toggle-ingredients-link::after {
  content: "\f107";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  margin-left: 5px;
  transition: var(--transition);
}

.toggle-ingredients-link[aria-expanded="true"]::after {
  transform: rotate(180deg);
}

/* Servings Control */
.servings-control {
  display: flex;
  align-items: center;
}

.servings-control .btn {
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  font-weight: bold;
  transition: var(--transition);
}

.servings-control .btn:hover {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: white;
}

.servings-input {
  text-align: center;
  font-weight: 500;
  border-radius: var(--border-radius);
  border: 1px solid #ced4da;
  transition: var(--transition);
  padding: 0.375rem 0.75rem;
}

.servings-input:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 0.2rem rgba(74, 111, 220, 0.25);
}

/* Price Information */
.price-info {
  line-height: 1.4;
}

.text-primary.total-price {
  font-weight: 600;
  color: var(--primary-color) !important;
  font-size: 1.05rem;
}

.text-muted {
  color: var(--text-secondary) !important;
  font-size: 0.9rem;
}

/* Ingredients List */
.ingredients-list {
  background-color: #f9f9f9;
  padding: 20px !important;
}

.ingredients-list h5 {
  margin-bottom: 15px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
}

.ingredients-list h5 i {
  margin-right: 8px;
  color: var(--primary-color);
}

.list-group-item {
  border-left: none;
  border-right: none;
  padding: 12px 15px;
  transition: var(--transition);
  border-color: rgba(0, 0, 0, 0.08);
}

.list-group-item:hover {
  background-color: rgba(74, 111, 220, 0.05);
}

.list-group-item:first-child {
  border-top-left-radius: var(--border-radius);
  border-top-right-radius: var(--border-radius);
}

.list-group-item:last-child {
  border-bottom-left-radius: var(--border-radius);
  border-bottom-right-radius: var(--border-radius);
}

.ingredient-check {
  width: 18px;
  height: 18px;
  cursor: pointer;
  accent-color: var(--accent-color);
}

.text-success {
  color: var(--accent-color) !important;
}

/* Total Price Section */
.total-price-section {
  background-color: white;
  padding: 25px;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
  position: sticky;
  top: 20px;
}

.total-price-section h4 {
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 20px;
}

.btn-success {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
  padding: 10px 20px;
  font-weight: 500;
  border-radius: var(--border-radius);
  transition: var(--transition);
  display: flex;
  align-items: center;
  gap: 8px;
}

.btn-success:hover {
  background-color: #2cb74e;
  border-color: #2cb74e;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(52, 199, 89, 0.25);
}

/* Delete Button */
.btn-sm {
  border-radius: var(--border-radius);
  transition: var(--transition);
  padding: 0.25rem 0.5rem;
}

.btn-sm i.fa-trash {
  color: var(--danger-color);
  transition: var(--transition);
}

.btn-sm:hover i.fa-trash {
  transform: scale(1.2);
}

/* Animation for collapsible sections */
.collapse {
  transition: var(--transition);
}

.collapse.show {
  animation: fadeIn 0.3s ease-in-out;
}

@@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Responsive adjustments */
@@media (max-width: 992px) {
  .recipe-header {
    flex-direction: column !important;
    align-items: flex-start !important;
  }
  
  .recipe-meta {
    flex-wrap: wrap;
    margin-top: 15px;
    gap: 15px;
    width: 100%;
  }
  
  .price-info {
    order: 2;
  }
  
  .servings-control {
    order: 1;
  }
  
  .total-price-section {
    margin-top: 20px;
    position: static;
  }
  
  .hero-content h1 {
    font-size: 2rem;
  }
  
  .hero-content p {
    font-size: 1rem;
  }
}

@@media (max-width: 768px) {
  .recipe-hero {
    padding: 30px 20px;
  }
  
  .recipe-meta {
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
  }
  
  .price-info {
    margin-right: 0 !important;
  }
  
  .servings-control {
    margin-right: 0 !important;
  }
  
  :root {
    --container-padding: 16px;
  }
}

/* Custom Animation for Page Load */
@@keyframes slideInUp {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.recipe-card {
  animation: slideInUp 0.5s ease forwards;
  animation-delay: calc(var(--card-index, 0) * 0.1s);
}

/* Add visual feedback when checking ingredients */
.ingredient-check:checked + .text-success {
  text-decoration: line-through;
  opacity: 0.7;
}

/* Progress bar for budget */
.budget-progress {
  height: 8px;
  background-color: #e9ecef;
  border-radius: 4px;
  overflow: hidden;
  margin: 15px 0;
}

.budget-bar {
  height: 100%;
  background-color: var(--accent-color);
  border-radius: 4px;
  width: 0%;
  transition: width 1s ease;
}
</style>
@* <style>
    /* Modern Variables */
:root {
  --primary-color: #4a6fdc;
  --primary-hover: #3a5fc9;
  --secondary-color: #f8f9fa;
  --accent-color: #34c759;
  --danger-color: #ff3b30;
  --text-primary: #212529;
  --text-secondary: #6c757d;
  --border-radius: 10px;
  --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  --transition: all 0.3s ease;
}

/* Main Container Styles */
.shopping-container {
  max-width: 1200px;
  margin: 0 auto;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

/* Hero Section */
.recipe-hero {
  background: linear-gradient(to right, var(--primary-color), #6c8dff);
  border-radius: var(--border-radius);
  padding: 40px;
  margin-bottom: 30px;
  box-shadow: var(--shadow);
}

.hero-content {
  text-align: center;
  color: white;
}

.hero-content h1 {
  font-weight: 700;
  font-size: 2.5rem;
  margin-bottom: 10px;
}

.hero-content p {
  font-size: 1.2rem;
  opacity: 0.9;
}

/* Recipe Cards */
.recipe-card {
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: var(--transition);
  border: 1px solid rgba(0, 0, 0, 0.08);
}

.recipe-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
}

.recipe-header {
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.recipe-header h4 {
  font-weight: 600;
}

.toggle-ingredients-link {
  font-size: 0.85rem;
  color: var(--primary-color);
  text-decoration: none;
  transition: var(--transition);
}

.toggle-ingredients-link:hover {
  color: var(--primary-hover);
  text-decoration: underline;
}

/* Servings Control */
.servings-control .btn {
  border-radius: 50%;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  font-weight: bold;
}

.servings-input {
  text-align: center;
  font-weight: 500;
}

/* Price Information */
.price-info {
  line-height: 1.3;
}

.total-price {
  font-weight: 600;
  color: var(--primary-color);
}

/* Ingredients List */
.ingredients-list {
  background-color: #f9f9f9;
}

.list-group-item {
  border-left: none;
  border-right: none;
  padding: 12px 15px;
  transition: var(--transition);
}

.list-group-item:hover {
  background-color: rgba(74, 111, 220, 0.05);
}

.ingredient-check {
  width: 20px;
  height: 20px;
  cursor: pointer;
}

/* Buttons */
.btn-success {
  background-color: var(--accent-color);
  border-color: var(--accent-color);
  padding: 10px 20px;
  font-weight: 500;
  border-radius: var(--border-radius);
  transition: var(--transition);
}

.btn-success:hover {
  background-color: #2cb74e;
  border-color: #2cb74e;
  transform: translateY(-2px);
}

/* Total Price Section */
.total-price-section {
  background-color: var(--secondary-color);
  padding: 20px;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
}

.total-price-section h4 {
  font-weight: 700;
  color: var(--text-primary);
}

/* Alerts */
.alert {
  border-radius: var(--border-radius);
  padding: 15px 20px;
  margin-bottom: 25px;
  border: none;
}

.alert-success {
  background-color: rgba(52, 199, 89, 0.15);
  color: #2cb74e;
}

.alert-info {
  background-color: rgba(74, 111, 220, 0.15);
  color: var(--primary-color);
  text-align: center;
  padding: 30px;
}

/* Animation for collapsible sections */
.collapse {
  transition: var(--transition);
}

.collapse.show {
  animation: fadeIn 0.3s ease-in-out;
}

@@keyframes fadeIn {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Responsive adjustments */
@@media (max-width: 768px) {
  .recipe-header {
    flex-direction: column;
    gap: 15px;
  }
  
  .recipe-meta {
    flex-wrap: wrap;
    justify-content: space-between;
  }
  
  .servings-control {
    margin-bottom: 10px;
  }
}
</style> *@

@* 
@model Newtonsoft.Json.Linq.JObject

@{
    ViewData["Title"] = Model?["title"]?.ToString() ?? "Recipe Details";
    var ingredientsArray = Model?["extendedIngredients"] as Newtonsoft.Json.Linq.JArray ?? new Newtonsoft.Json.Linq.JArray();
}

<h2>@(Model?["title"]?.ToString() ?? "No Title Available")</h2>

@if (!string.IsNullOrEmpty(Model?["image"]?.ToString()))
{
    <img src="@Model["image"]" alt="@Model["title"]" width="300">
}

<h4>Ingredients:</h4>
@if (ingredientsArray.Count > 0)
{
    <ul>
        @foreach (var ingredient in ingredientsArray)
        {
            if (ingredient?["original"] != null)
            {
                <li>@ingredient["original"]</li>
            }
        }
    </ul>
}
else
{
    <p>No ingredients available.</p>
}

<h4>Instructions:</h4>
<p>@Html.Raw(Model?["instructions"]?.ToString() ?? "No instructions available.")</p>

<p><strong>Cooking Time:</strong> @(Model?["readyInMinutes"]?.ToString() ?? "Unknown") minutes</p>
<p><strong>Servings:</strong> @(Model?["servings"]?.ToString() ?? "Unknown")</p>

<h4>Rate this Recipe:</h4>
<form method="post" asp-action="SubmitReview">
    <input type="hidden" name="RecipeId" value="@Model?["id"]?.ToString()" />
    <div class="form-group">
        <label for="rating">Rating (1-5):</label>
        <input type="number" class="form-control" name="Rating" min="1" max="5" required />
    </div>
    <div class="form-group">
        <label for="comment">Comment:</label>
        <textarea class="form-control" name="Comment" required></textarea>
    </div>
    <button type="submit" class="btn btn-success">Submit Review</button>
</form>

    <h4>User Reviews:</h4>
    @if (ViewBag.Reviews != null && ViewBag.Reviews.Count > 0)
    {
        <ul>
            @foreach (var review in ViewBag.Reviews)
            {
                <li>
                    <strong>Rating:</strong> @review.Rating / 5
                    <p>@review.Comment</p>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No reviews available yet.</p>
    }

    <h4>Missing Ingredients:</h4>
    <ul>
        @foreach (var ingredient in ingredientsArray)
        {
            <li>
                @ingredient["name"]
                <form method="post" asp-action="AddToShoppingList">
                    <input type="hidden" name="ingredient" value="@ingredient["name"]" />
                    <button type="submit" class="btn btn-sm btn-success">Add to Shopping List</button>
                </form>
            </li>
        }
    </ul>

    <form method="post" asp-controller="FavoriteRecipes" asp-action="AddToFavorites">
        <input type="hidden" name="recipeId" value="@Model?["id"]?.ToString()" />
        <input type="hidden" name="title" value="@Model?["title"]?.ToString()" />
        <input type="hidden" name="imageUrl" value="@Model?["image"]?.ToString()" />
        <button type="submit" class="btn btn-warning">⭐ Save to Favorites</button>
    </form>



 *@

                @model JObject

@{
    ViewData["Title"] = Model["title"]?.ToString();
}

<div class="recipe-container">
    <div class="recipe-hero">
        <div class="recipe-image-wrapper">
            <img src="@Model["image"]" alt="@Model["title"]" class="recipe-image">
            <div class="recipe-overlay">
                <div class="recipe-meta">
                    <span><i class="fas fa-clock"></i> @Model["readyInMinutes"] min</span>
                    <span><i class="fas fa-utensils"></i> @Model["servings"] servings</span>
                </div>
            </div>
        </div>
        <div class="recipe-header">
            <h1 class="recipe-title">@Model["title"]</h1>
            @if (User.Identity.IsAuthenticated)
            {
                <form method="post" asp-controller="FavoriteRecipes" asp-action="AddToFavorites" class="favorite-form">
                    <input type="hidden" name="recipeId" value="@Model["id"]?.ToString()" />
                    <input type="hidden" name="title" value="@Model["title"]?.ToString()" />
                    <input type="hidden" name="imageUrl" value="@Model["image"]?.ToString()" />
                    <button type="submit" class="btn-favorite">
                        <i class="fas fa-heart"></i> Save Recipe
                    </button>
                </form>
            }
        </div>
    </div>

    <div class="recipe-content">
        <div class="recipe-sidebar">
            <div class="ingredients-card">
                <h3><i class="fas fa-list"></i> Ingredients</h3>
                <ul class="ingredients-list">
                    @foreach (var ingredient in Model["extendedIngredients"])
                    {
                        @if(ingredient["original"] != null)
                        {
                            <li class="ingredient-item">
                                <span>@ingredient["original"]</span>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <button class="btn-add" onclick="addToShoppingList('@ingredient["original"]')">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                }
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>

        <div class="recipe-main">
            <div class="instructions-card">
                <h3><i class="fas fa-tasks"></i> Instructions</h3>
                <div class="instructions-content">
                    @Html.Raw(Model["instructions"])
                </div>
            </div>

            <div class="reviews-section">
                <h3><i class="fas fa-star"></i> Reviews</h3>
                @if (User.Identity.IsAuthenticated)
                {
                    <div class="review-form-card">
                        <form method="post" asp-action="SubmitReview">
                            <input type="hidden" name="RecipeId" value="@Model["id"]" />
                            <div class="rating-group">
                                <label>Your Rating</label>
                                <div class="star-rating">
                                    @for (int i = 5; i >= 1; i--)
                                    {
                                        <input type="radio" id="star@(i)" name="Rating" value="@i" required />
                                        <label for="star@(i)">★</label>
                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Your Review</label>
                                <textarea name="Comment" rows="3" placeholder="Share your cooking experience..." required></textarea>
                            </div>
                            <button type="submit" class="btn-submit">Post Review</button>
                        </form>
                    </div>
                }

                <div class="reviews-list">
                    @if (ViewBag.Reviews != null && ViewBag.Reviews.Count > 0)
                    {
                        foreach (var review in ViewBag.Reviews)
                        {
                            <div class="review-card">
                                <div class="review-header">
                                    <div class="user-info">
                                        <img src="https://ui-avatars.com/api/?name=@review.UserId&background=random" class="user-avatar" />
                                        <div class="user-details">
@*                                             <span class="user-name">@(review.UserName ?? "Chef")</span>
 *@                                            <div class="rating-stars">
                                                @for (int i = 0; i < review.Rating; i++)
                                                {
                                                    <span class="star">★</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <p class="review-text">@review.Comment</p>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-reviews">
                            <i class="fas fa-comment-alt"></i>
                            <p>Be the first to review this recipe!</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .recipe-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .recipe-hero {
        position: relative;
        margin-bottom: 40px;
        border-radius: 20px;
        overflow: hidden;
        background: #fff;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }

    .recipe-image-wrapper {
        position: relative;
        height: 400px;
        overflow: hidden;
    }

    .recipe-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .recipe-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 20px;
        background: linear-gradient(transparent, rgba(0,0,0,0.7));
        color: white;
    }

    .recipe-meta {
        display: flex;
        gap: 20px;
        font-size: 1.1em;
    }

    .recipe-header {
        padding: 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .recipe-title {
        font-size: 2.5em;
        margin: 0;
        color: #2c3e50;
        font-weight: 700;
    }

    .recipe-content {
        display: grid;
        grid-template-columns: 300px 1fr;
        gap: 30px;
    }

    .ingredients-card, .instructions-card, .review-form-card, .review-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        margin-bottom: 20px;
    }

    .ingredients-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .ingredient-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px;
        border-bottom: 1px solid #eee;
        transition: background-color 0.2s;
    }

    .btn-add {
        background: #4CAF50;
        color: white;
        border: none;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        cursor: pointer;
        transition: transform 0.2s;
    }

    .btn-add:hover {
        transform: scale(1.1);
    }

    .btn-favorite {
        background: #ff4757;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.2s;
    }

    .btn-favorite:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(255,71,87,0.3);
    }

    .star-rating {
        display: flex;
        flex-direction: row-reverse;
        gap: 5px;
    }

    .star-rating input {
        display: none;
    }

    .star-rating label {
        cursor: pointer;
        font-size: 30px;
        color: #ddd;
        transition: color 0.2s;
    }

    .star-rating label:hover,
    .star-rating label:hover ~ label,
    .star-rating input:checked ~ label {
        color: #ffd700;
    }

    .review-card {
        transition: transform 0.2s;
    }

    .review-card:hover {
        transform: translateY(-3px);
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .user-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
    }

    .rating-stars {
        color: #ffd700;
        font-size: 18px;
    }

    .no-reviews {
        text-align: center;
        padding: 40px;
        color: #666;
    }

    .no-reviews i {
        font-size: 40px;
        margin-bottom: 10px;
        color: #ddd;
    }

    textarea {
        width: 100%;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 12px;
        resize: vertical;
    }

    .btn-submit {
        background: #2196F3;
        color: white;
        border: none;
        padding: 12px 25px;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.2s;
    }

    .btn-submit:hover {
        background: #1976D2;
        transform: translateY(-2px);
    }

    @@media (max-width: 768px) {
        .recipe-content {
            grid-template-columns: 1fr;
        }

        .recipe-image-wrapper {
            height: 300px;
        }

        .recipe-title {
            font-size: 2em;
        }
    }
</style>

<script>
    function addToShoppingList(ingredient) {
        fetch('/Home/AddToShoppingList', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ ingredient: ingredient })
        })
        .then(response => {
            if (response.ok) {
                showToast('Added to shopping list!', 'success');
            } else {
                showToast('Failed to add item', 'error');
            }
        });
    }

    function showToast(message, type) {
        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        toast.textContent = message;
        document.body.appendChild(toast);
        setTimeout(() => toast.remove(), 3000);
    }
</script>
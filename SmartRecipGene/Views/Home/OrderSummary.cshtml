@* 

@model Tuple<List<object>, SmartRecipGene.Models.Address>
@{
    var recipeDetails = Model.Item1;
    var address = Model.Item2;
}

<div class="container-fluid py-5 bg-light">
    <div class="container">
        <div class="row mb-4">
            <div class="col-12">
                <h2 class="text-center fw-bold border-bottom pb-3 mb-4" style="color: #2c3e50;">Order Summary</h2>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <div class="card shadow-sm border-0 rounded-3 mb-4">
                    <div class="card-header bg-gradient" style="background-color: #3498db; color: white;">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-utensils fa-lg me-2"></i>
                            <h4 class="mb-0">Recipe Details</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Recipe</th>
                                        <th>Servings</th>
                                        <th>Price per serving</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in recipeDetails)
                                    {
                                        var recipe = (dynamic)item;
                                        <tr>
                                            <td class="align-middle">
                                                <div class="d-flex align-items-center">
                                                    <div class="recipe-image me-3">
                                                        <img src="@recipe.Img" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;"
     alt="Recipe image" />
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@recipe.RecipeTitle</h6>
                                                        <small class="text-muted">#@recipe.RecipeId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="badge bg-info rounded-pill">@recipe.Servings</span>
                                            </td>
                                            <td class="align-middle">₹@recipe.PricePerServing.ToString("F2")</td>
                                            <td class="align-middle fw-bold">₹@recipe.TotalPrice.ToString("F2")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="table-dark">
                                        <td colspan="3" class="text-end fw-bold">Total Order Value:</td>
                                        <td class="fw-bold fs-5">₹@recipeDetails.Sum(r => (decimal)((dynamic)r).TotalPrice).ToString("F2")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card shadow-sm border-0 rounded-3 mb-4">
                    <div class="card-header bg-gradient" style="background-color: #2ecc71; color: white;">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-map-marker-alt fa-lg me-2"></i>
                            <h4 class="mb-0">Delivery Address</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="p-3 bg-white rounded shadow-sm">
                            <address class="mb-3">
                                <strong class="d-block mb-2 fs-5">@Model.Item2.StreetAddress</strong>
                                <span class="d-block">@Model.Item2.City, @Model.Item2.State @Model.Item2.PostalCode</span>
                                <div class="mt-3 d-flex align-items-center">
                                    <i class="fas fa-phone-alt text-muted me-2"></i>
                                    <span>@Model.Item2.PhoneNumber</span>
                                </div>
                            </address>
                            @if (!string.IsNullOrEmpty(Model.Item2.Notes))
                            {
                                <div class="alert alert-info mt-3" style="background-color: #e8f4f8; border-color: #bce8f1;">
                                    <div class="d-flex">
                                        <i class="fas fa-info-circle text-info me-2 mt-1"></i>
                                        <div>
                                            <strong class="d-block mb-1">Delivery Notes:</strong>
                                            <p class="mb-0">@Model.Item2.Notes</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="mt-3">
                            <a asp-action="Address" class="btn btn-outline-secondary w-100">
                                <i class="fas fa-edit me-2"></i> Edit Address
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-header bg-gradient" style="background-color: #e74c3c; color: white;">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-credit-card fa-lg me-2"></i>
                            <h4 class="mb-0">Place Order</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="order-summary-box p-3 mb-3 rounded" style="background-color: #f8f9fa;">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Subtotal:</span>
                                <span>₹@Model.Item1.Sum(r => (decimal)((dynamic)r).TotalPrice).ToString("F2")</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Delivery Fee:</span>
                                <span>₹40.00</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Tax (5%):</span>
                                <span>₹@((Model.Item1.Sum(r => (decimal)((dynamic)r).TotalPrice) * 0.05m).ToString("F2"))</span>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between fw-bold">
                                <span>Total:</span>
                                <span class="fs-5">₹@((Model.Item1.Sum(r => (decimal)((dynamic)r).TotalPrice) + 40 + (Model.Item1.Sum(r => (decimal)((dynamic)r).TotalPrice) * 0.05m)).ToString("F2"))</span>
                            </div>
                        </div>

                        <form asp-action="PlaceOrder" method="post">
                            <input type="hidden" name="addressId" value="@Model.Item2.Id" />
                            <div class="payment-options mb-3">
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="cash" checked>
                                    <label class="form-check-label" for="cashOnDelivery">
                                        <i class="fas fa-money-bill-wave me-2"></i> Cash on Delivery
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="onlinePayment" value="online">
                                    <label class="form-check-label" for="onlinePayment">
                                        <i class="fas fa-credit-card me-2"></i> Online Payment
                                    </label>
                                </div>
                            </div>

                            <!-- Razorpay Payment Button (hidden by default) -->
                            <div id="razorpay-section" style="display:none;">
                                <button type="button" id="rzp-button1" class="btn btn-primary btn-lg w-100 mb-2">
                                    <i class="fas fa-credit-card me-2"></i> Pay with Razorpay
                                </button>
                            </div>

                            <button type="submit" class="btn btn-lg w-100 text-white fw-bold" style="background-color: #e74c3c;">
                                <i class="fas fa-check-circle me-2"></i> Confirm & Place Order
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f7fa;
        }

        .card {
            transition: transform 0.3s;
            border-radius: 15px;
            overflow: hidden;
        }

            .card:hover {
                transform: translateY(-5px);
            }

        .card-header {
            border-bottom: none;
            padding-top: 15px;
            padding-bottom: 15px;
        }

        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 0.5px;
        }

        .table td {
            vertical-align: middle;
        }

        .btn {
            border-radius: 8px;
            padding: 10px 20px;
            transition: all 0.3s;
        }

            .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

        address {
            line-height: 1.8;
        }

        .badge {
            padding: 8px 12px;
            font-weight: 500;
        }

        .order-summary-box {
            border-radius: 10px;
            box-shadow: inset 0 0 5px rgba(0,0,0,0.05);
        }
    </style>
}

@section Scripts {
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        // Show/hide Razorpay button based on payment method
        $('input[name="paymentMethod"]').change(function () {
            if ($('#onlinePayment').is(':checked')) {
                $('#razorpay-section').show();
            } else {
                $('#razorpay-section').hide();
            }
        });

        // Razorpay options
        var options = {
            "key": "rzp_test_6Wxdnw2HPXVKnn", // Replace with your Razorpay Key ID
            "amount": @((int)((Model.Item1.Sum(r => (decimal)((dynamic)r).TotalPrice) + 40 + (Model.Item1.Sum(r => (decimal)((dynamic)r).TotalPrice) * 0.05m)) * 100)), // Amount in paise
            "currency": "INR",
            "name": "ChefSync",
            "description": "Order Payment",
            "handler": function (response) {
                // TODO: Send response.razorpay_payment_id to your server for verification and order placement
                alert("Payment successful! Payment ID: " + response.razorpay_payment_id);
                // Optionally, submit a hidden form or redirect to a success page
            },
            "prefill": {
                "name": "",
                "email": "",
                "contact": ""
            },
            "theme": {
                "color": "#e74c3c"
            }
        };
        var rzp1 = new Razorpay(options);
        document.getElementById('rzp-button1').onclick = function (e) {
            rzp1.open();
            e.preventDefault();
        };
    </script>
} *@

              
                               @model Tuple<List<object>, SmartRecipGene.Models.Address>
@{
    var recipeDetails = Model.Item1;
    var address = Model.Item2;
    decimal subtotal = recipeDetails.Sum(r => (decimal)((dynamic)r).TotalPrice);
    decimal deliveryFee = 40m;
    decimal tax = subtotal * 0.05m;

    // Range-based discount logic
    decimal discount = 0;
    string discountMessage = null;
    if (subtotal >= 1000 && subtotal < 2000)
    {
        discount = subtotal * 0.05m; // 5% discount for subtotal between 1000 and 2000
        discountMessage = "You saved 5% on your order!";
    }
    else if (subtotal >= 2000 && subtotal < 5000)
    {
        discount = subtotal * 0.10m; // 10% discount for subtotal between 2000 and 5000
        discountMessage = "You saved 10% on your order!";
    }
    else if (subtotal >= 5000)
    {
        discount = subtotal * 0.15m; // 15% discount for subtotal above 5000
        discountMessage = "You saved 15% on your order!";
    }

    decimal total = subtotal + deliveryFee + tax - discount;
}
<div class="container-fluid py-5 bg-light">
    <div class="container">
        <div class="row mb-4">
            <div class="col-12">
                <h2 class="text-center fw-bold order-summary-title">Order Summary</h2>
            </div>
        </div>

        <!-- Recipe Details Section - Full Width at Top -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card recipe-details-card">
                    <div class="card-header recipe-details-header">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-utensils fa-lg me-2"></i>
                            <h4 class="mb-0">Recipe Details</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover recipe-table">
                                <thead class="table-light">
                                    <tr>
                                        <th>Recipe</th>
                                        <th>Servings</th>
                                        <th>Price per serving</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in recipeDetails)
                                    {
                                        var recipe = (dynamic)item;
                                        <tr>
                                            <td class="align-middle">
                                                <div class="d-flex align-items-center">
                                                    <div class="recipe-image me-3">
                                                        <img src="@recipe.Img" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;" alt="Recipe image" />
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@recipe.RecipeTitle</h6>
                                                        <small class="text-muted">#@recipe.RecipeId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="badge bg-info rounded-pill">@recipe.Servings</span>
                                            </td>
                                            <td class="align-middle">₹@recipe.PricePerServing.ToString("F2")</td>
                                            <td class="align-middle fw-bold">₹@recipe.TotalPrice.ToString("F2")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="table-dark">
                                        <td colspan="3" class="text-end fw-bold">Total Order Value:</td>
                                        <td class="fw-bold fs-5">₹@subtotal.ToString("F2")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Address and Place Order Sections - Side by Side -->
        <div class="row">
            <!-- Left Column - Delivery Address Section -->
            <div class="col-lg-6">
                <div class="card delivery-address-card h-100">
                    <div class="card-header delivery-address-header">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-map-marker-alt fa-lg me-2"></i>
                            <h4 class="mb-0">Delivery Address</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="p-3 bg-white rounded shadow-sm">
                            <address class="mb-3">
                                <strong class="d-block mb-2 fs-5">@address.StreetAddress</strong>
                                <span class="d-block">@address.City, @address.State @address.PostalCode</span>
                                <div class="mt-3 d-flex align-items-center">
                                    <i class="fas fa-phone-alt text-muted me-2"></i>
                                    <span>@address.PhoneNumber</span>
                                </div>
                            </address>
                            @if (!string.IsNullOrEmpty(address.Notes))
                            {
                                <div class="alert alert-info mt-3" style="background-color: #e8f4f8; border-color: #bce8f1;">
                                    <div class="d-flex">
                                        <i class="fas fa-info-circle text-info me-2 mt-1"></i>
                                        <div>
                                            <strong class="d-block mb-1">Delivery Notes:</strong>
                                            <p class="mb-0">@address.Notes</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="mt-3">
                            <a asp-action="Address" class="btn btn-outline-secondary w-100">
                                <i class="fas fa-edit me-2"></i> Edit Address
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Place Order Section -->
            <div class="col-lg-6">
                <div class="card place-order-card h-100">
                    <div class="card-header place-order-header">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-credit-card fa-lg me-2"></i>
                            <h4 class="mb-0">Place Order</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        @if (discount > 0)
                        {
                            <div class="alert alert-success">@discountMessage</div>
                        }
                        @{
                            // Coupon logic
                            bool isFirstLogin = true;
                            bool isFestive = true;
                            var coupons = new List<dynamic>();
                            coupons.Add(new { Code = "WELCOME50", Label = "₹50 off on orders above ₹499", Type = "flat", Value = 50, MinOrder = 499 });
                            coupons.Add(new { Code = "SAVE10", Label = "10% off on orders above ₹999", Type = "percent", Value = 10, MinOrder = 999 });
                            coupons.Add(new { Code = "SAVE20", Label = "20% off on orders above ₹1999", Type = "percent", Value = 20, MinOrder = 1999 });
                            if (isFirstLogin)
                            {
                                coupons.Add(new { Code = "FIRST100", Label = "₹100 off for your first order (min ₹500)", Type = "flat", Value = 100, MinOrder = 500 });
                                coupons.Add(new { Code = "FIRST15", Label = "15% off for your first order (min ₹1000)", Type = "percent", Value = 15, MinOrder = 1000 });
                            }
                            if (isFestive)
                            {
                                coupons.Add(new { Code = "FESTIVE200", Label = "₹200 off on festive orders above ₹1500", Type = "flat", Value = 200, MinOrder = 1500 });
                                coupons.Add(new { Code = "FESTIVE25", Label = "25% off on festive orders above ₹2500", Type = "percent", Value = 25, MinOrder = 2500 });
                            }
                            if (subtotal >= 3000)
                            {
                                coupons.Add(new { Code = "BIG500", Label = "₹500 off on orders above ₹3000", Type = "flat", Value = 500, MinOrder = 3000 });
                                coupons.Add(new { Code = "BIG30", Label = "30% off on orders above ₹5000", Type = "percent", Value = 30, MinOrder = 5000 });
                            }
                            var availableCoupons = coupons.Where(c => subtotal >= c.MinOrder).ToList();
                        }
                        @if (availableCoupons.Any())
                        {
                            <div class="coupon-section mb-3">
                                <label class="fw-bold mb-2">Available Coupons:</label>
                                <div id="coupon-list">
                                    @foreach (var c in availableCoupons)
                                    {
                                        <button type="button" class="btn btn-sm me-2 mb-2 coupon-btn"
                                                data-code="@c.Code"
                                                data-type="@c.Type"
                                                data-value="@c.Value"
                                                data-label="@c.Label">
                                            @c.Code - @c.Label
                                        </button>
                                    }
                                </div>
                                <div id="applied-coupon" class="mt-2 text-success fw-bold">No coupon applied</div>
                            </div>
                        }

                        <div class="order-summary-box p-3 mb-3 rounded">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Subtotal:</span>
                                <span id="subtotal-text">₹@subtotal.ToString("F2")</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Delivery Fee:</span>
                                <span id="deliveryfee-text">₹@deliveryFee.ToString("F2")</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Tax (5%):</span>
                                <span id="tax-text">₹@tax.ToString("F2")</span>
                            </div>
                            @if (discount > 0)
                            {
                                <div class="d-flex justify-content-between mb-2 text-success">
                                    <span>Automatic Discount:</span>
                                    <span id="auto-discount-text">-₹@discount.ToString("F2")</span>
                                </div>
                            }

                            <div id="coupon-discount-row" class="d-flex justify-content-between mb-2 text-primary">
                                <span>Coupon Discount (<span id="coupon-code"></span>):</span>
                                <span id="coupon-discount"></span>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between fw-bold">
                                <span>Total:</span>
                                <span class="fs-5" id="total-text">₹@total.ToString("F2")</span>
                            </div>
                        </div>

                        <form asp-action="PlaceOrder" method="post">
                            <input type="hidden" name="addressId" value="@address.Id" />
                            <div class="payment-options mb-3">
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="cash" checked>
                                    <label class="form-check-label" for="cashOnDelivery">
                                        <i class="fas fa-money-bill-wave me-2"></i> Cash on Delivery
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="onlinePayment" value="online">
                                    <label class="form-check-label" for="onlinePayment">
                                        <i class="fas fa-credit-card me-2"></i> Online Payment
                                    </label>
                                </div>
                            </div>

                            <!-- Razorpay Payment Button (hidden by default) -->
                            <div id="razorpay-section" style="display:none;">
                                <button type="button" id="rzp-button1" class="btn btn-primary btn-lg w-100 mb-2">
                                    <i class="fas fa-credit-card me-2"></i> Pay with Razorpay
                                </button>
                            </div>

                            <button type="submit" class="place-order-btn btn btn-lg w-100">
                                <i class="fas fa-check-circle me-2"></i> Confirm & Place Order
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Enhanced Color Scheme CSS */

    /* Order Summary Title */
    .order-summary-title {
        color: #1a3c6e;
        font-weight: 700;
        border-bottom: 2px solid rgba(26, 60, 110, 0.2);
        padding-bottom: 0.75rem;
        margin-bottom: 1.5rem;
    }

    /* Recipe Details Header */
    .recipe-details-header {
        background: linear-gradient(135deg, #4b6cb7 0%, #182848 100%);
        color: white;
        border: none;
        border-radius: 0.375rem 0.375rem 0 0;
    }

    .recipe-details-card {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        border-radius: 0.375rem;
        transition: box-shadow 0.3s ease;
    }

        .recipe-details-card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }

    /* Delivery Address Header */
    .delivery-address-header {
        background: linear-gradient(135deg, #076678 0%, #064e5a 100%);
        color: white;
        border: none;
        border-radius: 0.375rem 0.375rem 0 0;
    }

    .delivery-address-card {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        border-radius: 0.375rem;
        transition: box-shadow 0.3s ease;
    }

        .delivery-address-card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }

    /* Place Order Header */
    .place-order-header {
        background: linear-gradient(135deg, #983b4d 0%, #7d2941 100%);
        color: white;
        border: none;
        border-radius: 0.375rem 0.375rem 0 0;
    }

    .place-order-card {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        border-radius: 0.375rem;
        transition: box-shadow 0.3s ease;
    }

        .place-order-card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }

    /* Place Order Button */
    .place-order-btn {
        background: linear-gradient(135deg, #983b4d 0%, #7d2941 100%);
        color: white;
        font-weight: 600;
        border: none;
        border-radius: 0.375rem;
        padding: 0.75rem 1.5rem;
        transition: all 0.3s ease;
    }

        .place-order-btn:hover {
            background: linear-gradient(135deg, #7d2941 0%, #6c2438 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(152, 59, 77, 0.3);
        }

        .place-order-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(152, 59, 77, 0.3);
        }

    /* Table Styling for Recipe Details */
    .recipe-table thead {
        background-color: rgba(75, 108, 183, 0.1);
        border-bottom: 2px solid rgba(75, 108, 183, 0.2);
    }

    .recipe-table .table-dark {
        background-color: #1a3c6e;
    }

    /* Coupon Section */
    .coupon-btn {
        border-color: #4b6cb7;
        color: #4b6cb7;
    }

        .coupon-btn:hover {
            background-color: #4b6cb7;
            color: white;
        }

    /* Summary Box */
    .order-summary-box {
        background-color: #f9fafc;
        border: 1px solid rgba(26, 60, 110, 0.1);
        border-radius: 0.375rem;
    }

        .order-summary-box hr {
            border-color: rgba(26, 60, 110, 0.1);
        }
</style>
@* <div class="container-fluid py-5 bg-light">
    <div class="container">
        <div class="row mb-4">
            <div class="col-12">
                <h2 class="text-center fw-bold border-bottom pb-3 mb-4" style="color: #2c3e50;">Order Summary</h2>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-8">
                <div class="card shadow-sm border-0 rounded-3 mb-4">
                    <div class="card-header bg-gradient" style="background-color: #3498db; color: white;">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-utensils fa-lg me-2"></i>
                            <h4 class="mb-0">Recipe Details</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Recipe</th>
                                        <th>Servings</th>
                                        <th>Price per serving</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in recipeDetails)
                                    {
                                        var recipe = (dynamic)item;
                                        <tr>
                                            <td class="align-middle">
                                                <div class="d-flex align-items-center">
                                                    <div class="recipe-image me-3">
                                                        <img src="@recipe.Img" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;" alt="Recipe image" />
                                                    </div>
                                                    <div>
                                                        <h6 class="mb-0">@recipe.RecipeTitle</h6>
                                                        <small class="text-muted">#@recipe.RecipeId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="badge bg-info rounded-pill">@recipe.Servings</span>
                                            </td>
                                            <td class="align-middle">₹@recipe.PricePerServing.ToString("F2")</td>
                                            <td class="align-middle fw-bold">₹@recipe.TotalPrice.ToString("F2")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="table-dark">
                                        <td colspan="3" class="text-end fw-bold">Total Order Value:</td>
                                        <td class="fw-bold fs-5">₹@subtotal.ToString("F2")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card shadow-sm border-0 rounded-3 mb-4">
                    <div class="card-header bg-gradient" style="background-color: #2ecc71; color: white;">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-map-marker-alt fa-lg me-2"></i>
                            <h4 class="mb-0">Delivery Address</h4>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="p-3 bg-white rounded shadow-sm">
                            <address class="mb-3">
                                <strong class="d-block mb-2 fs-5">@address.StreetAddress</strong>
                                <span class="d-block">@address.City, @address.State @address.PostalCode</span>
                                <div class="mt-3 d-flex align-items-center">
                                    <i class="fas fa-phone-alt text-muted me-2"></i>
                                    <span>@address.PhoneNumber</span>
                                </div>
                            </address>
                            @if (!string.IsNullOrEmpty(address.Notes))
                            {
                                <div class="alert alert-info mt-3" style="background-color: #e8f4f8; border-color: #bce8f1;">
                                    <div class="d-flex">
                                        <i class="fas fa-info-circle text-info me-2 mt-1"></i>
                                        <div>
                                            <strong class="d-block mb-1">Delivery Notes:</strong>
                                            <p class="mb-0">@address.Notes</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="mt-3">
                            <a asp-action="Address" class="btn btn-outline-secondary w-100">
                                <i class="fas fa-edit me-2"></i> Edit Address
                            </a>
                        </div>
                    </div>
                </div>

                <div class="card shadow-sm border-0 rounded-3">
                    <div class="card-header bg-gradient" style="background-color: #e74c3c; color: white;">
                        <div class="d-flex align-items-center">
                            <i class="fas fa-credit-card fa-lg me-2"></i>
                            <h4 class="mb-0">Place Order</h4>
                        </div>
                    </div>
                   
                   
                    <div class="card-body">
                        @if (discount > 0)
                        {
                            <div class="alert alert-success">@discountMessage</div>
                        }
                        @{
                            // Coupon logic
                            bool isFirstLogin = true;
                            bool isFestive = true;
                            var coupons = new List<dynamic>();
                            coupons.Add(new { Code = "WELCOME50", Label = "₹50 off on orders above ₹499", Type = "flat", Value = 50, MinOrder = 499 });
                            coupons.Add(new { Code = "SAVE10", Label = "10% off on orders above ₹999", Type = "percent", Value = 10, MinOrder = 999 });
                            coupons.Add(new { Code = "SAVE20", Label = "20% off on orders above ₹1999", Type = "percent", Value = 20, MinOrder = 1999 });
                            if (isFirstLogin)
                            {
                                coupons.Add(new { Code = "FIRST100", Label = "₹100 off for your first order (min ₹500)", Type = "flat", Value = 100, MinOrder = 500 });
                                coupons.Add(new { Code = "FIRST15", Label = "15% off for your first order (min ₹1000)", Type = "percent", Value = 15, MinOrder = 1000 });
                            }
                            if (isFestive)
                            {
                                coupons.Add(new { Code = "FESTIVE200", Label = "₹200 off on festive orders above ₹1500", Type = "flat", Value = 200, MinOrder = 1500 });
                                coupons.Add(new { Code = "FESTIVE25", Label = "25% off on festive orders above ₹2500", Type = "percent", Value = 25, MinOrder = 2500 });
                            }
                            if (subtotal >= 3000)
                            {
                                coupons.Add(new { Code = "BIG500", Label = "₹500 off on orders above ₹3000", Type = "flat", Value = 500, MinOrder = 3000 });
                                coupons.Add(new { Code = "BIG30", Label = "30% off on orders above ₹5000", Type = "percent", Value = 30, MinOrder = 5000 });
                            }
                            var availableCoupons = coupons.Where(c => subtotal >= c.MinOrder).ToList();
                        }
                        @if (availableCoupons.Any())
                        {
                            <div class="coupon-section mb-3">
                                <label class="fw-bold mb-2">Available Coupons:</label>
                                <div id="coupon-list">
                                    @foreach (var c in availableCoupons)
                                    {
                                        <button type="button" class="btn btn-outline-primary btn-sm me-2 mb-2 coupon-btn"
                                                data-code="@c.Code"
                                                data-type="@c.Type"
                                                data-value="@c.Value"
                                                data-label="@c.Label">
                                            @c.Code - @c.Label
                                        </button>
                                    }
                                </div>
                                <div id="applied-coupon" class="mt-2 text-success fw-bold">No coupon applied</div>
                            </div>
                        }
                    
                        
        <div class="order-summary-box p-3 mb-3 rounded" style="background-color: #f8f9fa;">
        <div class="d-flex justify-content-between mb-2">
            <span>Subtotal:</span>
            <span id="subtotal-text">₹@subtotal.ToString("F2")</span>
        </div>
        <div class="d-flex justify-content-between mb-2">
            <span>Delivery Fee:</span>
            <span id="deliveryfee-text">₹@deliveryFee.ToString("F2")</span>
        </div>
        <div class="d-flex justify-content-between mb-2">
            <span>Tax (5%):</span>
            <span id="tax-text">₹@tax.ToString("F2")</span>
        </div>
        @if (discount > 0)
        {
            <div class="d-flex justify-content-between mb-2 text-success">
                <span>Automatic Discount:</span>
                <span id="auto-discount-text">-₹@discount.ToString("F2")</span>
            </div>
        }
     
<div id="coupon-discount-row" class="d-flex justify-content-between mb-2 text-primary">
    <span>Coupon Discount (<span id="coupon-code"></span>):</span>
    <span id="coupon-discount"></span>
</div>
<hr>
<div class="d-flex justify-content-between fw-bold">
    <span>Total:</span>
    <span class="fs-5" id="total-text">₹@total.ToString("F2")</span>
</div>

       
    </div>
                        

                        <form asp-action="PlaceOrder" method="post">
                            <input type="hidden" name="addressId" value="@address.Id" />
                            <div class="payment-options mb-3">
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cashOnDelivery" value="cash" checked>
                                    <label class="form-check-label" for="cashOnDelivery">
                                        <i class="fas fa-money-bill-wave me-2"></i> Cash on Delivery
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="onlinePayment" value="online">
                                    <label class="form-check-label" for="onlinePayment">
                                        <i class="fas fa-credit-card me-2"></i> Online Payment
                                    </label>
                                </div>
                            </div>

                            <!-- Razorpay Payment Button (hidden by default) -->
                            <div id="razorpay-section" style="display:none;">
                                <button type="button" id="rzp-button1" class="btn btn-primary btn-lg w-100 mb-2">
                                    <i class="fas fa-credit-card me-2"></i> Pay with Razorpay
                                </button>
                            </div>

                            <button type="submit" class="btn btn-lg w-100 text-white fw-bold" style="background-color: #e74c3c;">
                                <i class="fas fa-check-circle me-2"></i> Confirm & Place Order
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div> *@
@* <style>
    

    /* Order Summary Title */
    .order-summary-title {
        color: #1a3c6e;
        font-weight: 700;
        border-bottom: 2px solid rgba(26, 60, 110, 0.2);
        padding-bottom: 0.75rem;
        margin-bottom: 1.5rem;
    }

    /* Recipe Details Header */
    .recipe-details-header {
        background: linear-gradient(135deg, #4b6cb7 0%, #182848 100%);
        color: white;
        border: none;
        border-radius: 0.375rem 0.375rem 0 0;
    }

    .recipe-details-card {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        border-radius: 0.375rem;
        transition: box-shadow 0.3s ease;
    }

        .recipe-details-card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }

    /* Delivery Address Header */
    .delivery-address-header {
        background: linear-gradient(135deg, #076678 0%, #064e5a 100%);
        color: white;
        border: none;
        border-radius: 0.375rem 0.375rem 0 0;
    }

    .delivery-address-card {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        border-radius: 0.375rem;
        transition: box-shadow 0.3s ease;
    }

        .delivery-address-card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }

    /* Place Order Header */
    .place-order-header {
        background: linear-gradient(135deg, #983b4d 0%, #7d2941 100%);
        color: white;
        border: none;
        border-radius: 0.375rem 0.375rem 0 0;
    }

    .place-order-card {
        border: none;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        border-radius: 0.375rem;
        transition: box-shadow 0.3s ease;
    }

        .place-order-card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.08);
        }

    /* Place Order Button */
    .place-order-btn {
        background: linear-gradient(135deg, #983b4d 0%, #7d2941 100%);
        color: white;
        font-weight: 600;
        border: none;
        border-radius: 0.375rem;
        padding: 0.75rem 1.5rem;
        transition: all 0.3s ease;
    }

        .place-order-btn:hover {
            background: linear-gradient(135deg, #7d2941 0%, #6c2438 100%);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(152, 59, 77, 0.3);
        }

        .place-order-btn:active {
            transform: translateY(0);
            box-shadow: 0 2px 4px rgba(152, 59, 77, 0.3);
        }

    /* Table Styling for Recipe Details */
    .recipe-table thead {
        background-color: rgba(75, 108, 183, 0.1);
        border-bottom: 2px solid rgba(75, 108, 183, 0.2);
    }

    .recipe-table .table-dark {
        background-color: #1a3c6e;
    }

    /* Coupon Section */
    .coupon-btn {
        border-color: #4b6cb7;
        color: #4b6cb7;
    }

        .coupon-btn:hover {
            background-color: #4b6cb7;
            color: white;
        }

    /* Summary Box */
    .order-summary-box {
        background-color: #f9fafc;
        border: 1px solid rgba(26, 60, 110, 0.1);
        border-radius: 0.375rem;
    }

        .order-summary-box hr {
            border-color: rgba(26, 60, 110, 0.1);
        }
/* </style> */
 *@@* <style>
    /* ========== GLOBAL STYLES ========== */
:root {
  --primary: #34675c;
  --primary-light: #4a7c71;
  --secondary: #ff7e67;
  --accent: #ffb563;
  --dark: #333333;
  --light: #f9f9f9;
  --gray: #e0e0e0;
  --success: #4caf50;
  --danger: #f44336;
  --info: #2196f3;
  --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  --shadow-hover: 0 6px 16px rgba(0, 0, 0, 0.12);
  --font-primary: 'Poppins', sans-serif;
  --font-secondary: 'Montserrat', sans-serif;
  --border-radius: 10px;
  --border-radius-sm: 6px;
  --transition: all 0.25s ease;
}

body {
  font-family: var(--font-primary);
  background-color: #f5f7fa;
  color: var(--dark);
  line-height: 1.6;
}

.container-fluid {
  background: linear-gradient(135deg, #ffffff 0%, #f5f7fa 100%);
  padding: 40px 0;
}

h2, h3, h4, h5, h6 {
  font-family: var(--font-secondary);
  font-weight: 600;
}

/* ========== CARD STYLING ========== */
.card {
  border: none;
  box-shadow: var(--shadow);
  transition: var(--transition);
  border-radius: var(--border-radius);
  overflow: hidden;
  margin-bottom: 24px;
}

.card:hover {
  box-shadow: var(--shadow-hover);
  transform: translateY(-3px);
}

.card-header {
  background: var(--primary);
  color: white;
  padding: 16px 20px;
  border-bottom: none;
  border-radius: 0 !important;
}

.card-header h4 {
  margin: 0;
  font-size: 1.25rem;
}

.card-body {
  padding: 24px;
}

/* ========== TABLE STYLING ========== */
.table {
  margin-bottom: 0;
  border-collapse: separate;
  border-spacing: 0 5px;
}

.table thead th {
  background-color: #f0f4f7;
  color: var(--primary);
  font-weight: 600;
  padding: 14px;
  border: none;
}

.table tbody tr {
  background-color: white;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  transition: var(--transition);
}

.table tbody tr:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
}

.table tbody td {
  padding: 14px;
  border-top: none;
  vertical-align: middle;
}

.table tfoot tr {
  background-color: var(--primary);
  color: white;
}

.table tfoot td {
  padding: 16px;
}

/* Recipe image styling */
.recipe-image img {
  border-radius: 8px;
  object-fit: cover;
  transition: var(--transition);
}

.recipe-image img:hover {
  transform: scale(1.05);
}

/* ========== BADGE STYLING ========== */
.badge {
  padding: 6px 12px;
  font-weight: 500;
  border-radius: 20px;
  font-size: 0.875rem;
}

.badge.bg-info {
  background-color: var(--primary-light) !important;
}

/* ========== ORDER SUMMARY SECTION ========== */
.order-summary-box {
  background: white;
  border-radius: var(--border-radius);
  padding: 20px !important;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
}

.order-summary-box hr {
  margin: 16px 0;
  opacity: 0.1;
  border-color: var(--dark);
}

.order-summary-box .d-flex {
  padding: 5px 0;
}

/* ========== ADDRESS SECTION ========== */
address {
  padding: 10px;
  background-color: white;
  border-radius: var(--border-radius-sm);
}

address strong {
  color: var(--primary);
}

.alert-info {
  background-color: #e8f4ff;
  border-color: #d1e6ff;
  color: #0066cc;
  border-radius: var(--border-radius-sm);
}

/* ========== BUTTONS ========== */
.btn {
  border-radius: 30px;
  padding: 10px 24px;
  font-weight: 500;
  transition: var(--transition);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-size: 0.875rem;
}

.btn-lg {
  padding: 12px 28px;
  font-size: 1rem;
}

.btn-primary {
  background-color: var(--primary);
  border-color: var(--primary);
}

.btn-primary:hover, .btn-primary:focus {
  background-color: var(--primary-light);
  border-color: var(--primary-light);
  transform: translateY(-2px);
}

.btn-outline-secondary {
  color: var(--dark);
  border-color: var(--gray);
}

.btn-outline-secondary:hover {
  background-color: var(--gray);
  color: var(--dark);
  border-color: var(--gray);
}

.btn-outline-primary {
  color: var(--primary);
  border-color: var(--primary);
}

.btn-outline-primary:hover {
  background-color: var(--primary);
  color: white;
}

.btn-sm {
  padding: 6px 14px;
  font-size: 0.75rem;
}

/* Submit button */
button[type="submit"] {
  background: linear-gradient(135deg, var(--secondary) 0%, var(--accent) 100%);
  border: none;
  box-shadow: 0 4px 15px rgba(255, 126, 103, 0.4);
  transition: all 0.3s ease;
}

button[type="submit"]:hover {
  box-shadow: 0 6px 18px rgba(255, 126, 103, 0.6);
  transform: translateY(-3px);
}

/* ========== COUPON SECTION ========== */
.coupon-section {
  background-color: #f8f8f8;
  padding: 15px;
  border-radius: var(--border-radius-sm);
  border-left: 4px solid var(--accent);
}

.coupon-btn {
  margin-right: 8px;
  margin-bottom: 8px;
  border-radius: 20px;
  background: white;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
  border: 1px solid #e6e6e6;
  color: var(--primary);
  transition: var(--transition);
}

.coupon-btn:hover {
  background-color: var(--primary);
  color: white;
  border-color: var(--primary);
}

#applied-coupon {
  padding: 8px 12px;
  background-color: #e8f5e9;
  border-radius: var(--border-radius-sm);
  font-size: 0.875rem;
}

/* ========== PAYMENT OPTIONS ========== */
.payment-options {
  background: white;
  padding: 16px;
  border-radius: var(--border-radius-sm);
  margin-bottom: 20px;
}

.form-check {
  margin-bottom: 10px;
}

.form-check-input:checked {
  background-color: var(--primary);
  border-color: var(--primary);
}

.form-check-label {
  font-weight: 500;
}

/* ========== RESPONSIVE ADJUSTMENTS ========== */
@@media (max-width: 992px) {
  .container {
    max-width: 100%;
    padding: 0 20px;
  }
}

@@media (max-width: 768px) {
  .table-responsive {
    border-radius: var(--border-radius-sm);
    overflow: hidden;
  }
  
  .order-summary-box {
    padding: 15px !important;
  }
  
  .card-header h4 {
    font-size: 1.1rem;
  }
}

@@media (max-width: 576px) {
  .recipe-image img {
    width: 50px;
    height: 50px;
  }
  
  .table tbody td {
    padding: 10px;
  }
  
  .btn {
    padding: 8px 16px;
  }
}
   
</style>
 *@

@section Scripts {
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        let subtotal = @subtotal;
        let deliveryFee = @deliveryFee;
        let tax = @tax;
        let autoDiscount = @discount;
        let total = @total;

        let appliedCoupon = null;

        function recalculateTotal() {
            let couponDiscount = 0;
            let couponText = '0';
            let couponCode = '';
            if (appliedCoupon) {
                if (appliedCoupon.type === 'flat') {
                    couponDiscount = appliedCoupon.value;
                    couponText = '-₹' + couponDiscount.toFixed(2);
                } else if (appliedCoupon.type === 'percent') {
                    couponDiscount = ((subtotal + deliveryFee + tax - autoDiscount) * appliedCoupon.value / 100);
                    couponText = '-' + appliedCoupon.value + '% (₹' + couponDiscount.toFixed(2) + ')';
                }
                couponCode = appliedCoupon.code;
                let appliedCouponDiv = document.getElementById('applied-coupon');
                if (appliedCouponDiv) {
                    appliedCouponDiv.innerText = 'Applied: ' + appliedCoupon.code + ' - ' + appliedCoupon.label;
                }
            } else {
                couponDiscount = 0;
                couponText = '0';
                couponCode = '';
                let appliedCouponDiv = document.getElementById('applied-coupon');
                if (appliedCouponDiv) {
                    appliedCouponDiv.innerText = 'No coupon applied';
                }
            }
            // Always show the row, update values
            document.getElementById('coupon-discount-row').style.display = '';
            document.getElementById('coupon-code').innerText = couponCode;
            document.getElementById('coupon-discount').innerText = couponText;

            let newTotal = subtotal + deliveryFee + tax - autoDiscount - couponDiscount;
            if (newTotal < 0) newTotal = 0;
            document.getElementById('total-text').innerText = '₹' + newTotal.toFixed(2);

            // Set hidden input for server if present
            let couponInput = document.getElementById('appliedCouponCode');
            if (couponInput) {
                couponInput.value = appliedCoupon ? appliedCoupon.code : '';
            }
        }

        document.querySelectorAll('.coupon-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                document.querySelectorAll('.coupon-btn').forEach(b => b.classList.remove('active'));
                this.classList.add('active');
                appliedCoupon = {
                    code: this.getAttribute('data-code'),
                    type: this.getAttribute('data-type'),
                    value: parseFloat(this.getAttribute('data-value')),
                    label: this.getAttribute('data-label')
                };
                recalculateTotal();
            });
        });

        // Initial calculation
        recalculateTotal();

        // Show/hide Razorpay button based on payment method
        $('input[name="paymentMethod"]').change(function () {
            if ($('#onlinePayment').is(':checked')) {
                $('#razorpay-section').show();
            } else {
                $('#razorpay-section').hide();
            }
        });

        // Razorpay options
        var options = {
            "key": "rzp_test_6Wxdnw2HPXVKnn", // Replace with your Razorpay Key ID
            "amount": @((int)((subtotal + deliveryFee + tax - discount) * 100)), // Amount in paise
            "currency": "INR",
            "name": "ChefSync",
            "description": "Order Payment",
            "handler": function (response) {
                // TODO: Send response.razorpay_payment_id to your server for verification and order placement
                alert("Payment successful! Payment ID: " + response.razorpay_payment_id);
                // Optionally, submit a hidden form or redirect to a success page
            },
            "prefill": {
                "name": "",
                "email": "",
                "contact": ""
            },
            "theme": {
                "color": "#e74c3c"
            }
        };
        var rzp1 = new Razorpay(options);
        document.getElementById('rzp-button1').onclick = function (e) {
            rzp1.open();
            e.preventDefault();
        };
    </script>
}

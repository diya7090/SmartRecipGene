@model List<SmartRecipGene.Models.Order>

@{
    ViewBag.Title = "Order Management";
}

<div class="container mt-5">
    <h2 class="mb-4">Order Management</h2>
    <table class="table table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>Order #</th>
                <th>User</th>
                <th>Total Amount</th>
                <th>Status</th>
                <th>Order Date</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.OrderNumber</td>
                    <td> @{
                        var userNames = ViewBag.UserNames as Dictionary<string, string>;
                        var userName = userNames != null && userNames.ContainsKey(order.UserId)
                        ? userNames[order.UserId]
                        : order.UserId; // fallback to UserId if not found
                    }
                    @userName

                </td>
                <td>₹@order.TotalAmount.ToString("F2")</td>
                <td>
                    <form asp-action="UpdateOrderStatus" asp-controller="Admin" method="post" class="d-inline">
                        <input type="hidden" name="orderId" value="@order.Id" />
                      
                            <select name="status" class="form-select form-select-sm d-inline w-auto">
                                <option value="Pending" selected="@(order.Status == "Pending" ? "selected" : null)">Pending</option>
                                <option value="Processing" selected="@(order.Status == "Processing" ? "selected" : null)">Processing</option>
                                <option value="Shipped" selected="@(order.Status == "Shipped" ? "selected" : null)">Shipped</option>
                                <option value="Delivered" selected="@(order.Status == "Delivered" ? "selected" : null)">Delivered</option>
                                <option value="Cancelled" selected="@(order.Status == "Cancelled" ? "selected" : null)">Cancelled</option>
                            </select>
 
                        <button type="submit" class="btn btn-sm btn-primary ms-2">Update</button>
                    </form>
                </td>
                <td>@order.OrderDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>
                    <a asp-action="OrderDetails" asp-controller="Admin" asp-route-id="@order.Id" class="btn btn-info btn-sm">
                        View Details
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
<style>
/* ======== Header Style ======== */
h2 {
    font-weight: 700;
    color: #0f172a;
    letter-spacing: -0.025em;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid rgba(226, 232, 240, 0.6);
    position: relative;
}

h2::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -1px;
    width: 120px;
    height: 3px;
    background: linear-gradient(90deg, #3b82f6 0%, #8b5cf6 100%);
    border-radius: 3px;
}

/* ======== Premium Table Design ======== */
.table {
    --table-accent: #3b82f6;
    border-collapse: separate;
    border-spacing: 0;
    margin: 2rem 0;
    width: 100%;
    border-radius: 18px;
    overflow: hidden;
    box-shadow: 0 4px 24px rgba(0,0,0,0.06);
    background: white;
    transition: all 0.3s ease;
}

.table-dark {
    background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
    color: white;
    box-shadow: 0 8px 32px rgba(0,0,0,0.12);
}

.table-dark th {
    font-weight: 600;
    letter-spacing: 0.03em;
    padding: 1.25rem;
    border: none;
    background: transparent;
    position: relative;
}

.table-dark th::after {
    content: '';
    position: absolute;
    left: 1.25rem;
    right: 1.25rem;
    bottom: 0;
    height: 2px;
    background: rgba(255,255,255,0.1);
}

.table-hover tbody tr {
    transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
}

.table-hover tbody tr:hover {
    background-color: #f8fafc;
    transform: translateY(-2px);
    box-shadow: 0 6px 16px rgba(0,0,0,0.08);
    z-index: 1;
}

.table-bordered td {
    border: 1px solid rgba(226, 232, 240, 0.5);
    padding: 1.25rem;
    vertical-align: middle;
    position: relative;
}

/* ======== Status Selector ======== */
.form-select {
    border-radius: 12px;
    border: 1px solid #e2e8f0;
    padding: 0.65rem 1.25rem;
    font-size: 0.875rem;
    transition: all 0.3s ease;
    background-color: #f8fafc;
    cursor: pointer;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1rem;
    min-width: 160px;
}

.form-select:focus {
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59,130,246,0.2);
    outline: none;
    background-color: white;
}

/* ======== Action Buttons ======== */
.btn {
    font-weight: 600;
    letter-spacing: 0.025em;
    padding: 0.75rem 1.5rem;
    border-radius: 12px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    position: relative;
    overflow: hidden;
}

.btn-sm {
    padding: 0.5rem 1.25rem;
    font-size: 0.8125rem;
    border-radius: 10px;
}

.btn-primary {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
    border: none;
    color: white;
}

.btn-primary:hover {
    background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(59,130,246,0.2);
}

.btn-primary::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: 0.5s;
}

.btn-primary:hover::after {
    left: 100%;
}

.btn-info {
    background: linear-gradient(135deg, #38bdf8 0%, #0ea5e9 100%);
    border: none;
    color: white;
}

.btn-info:hover {
    background: linear-gradient(135deg, #0ea5e9 0%, #0284c7 100%);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(56,189,248,0.2);
}

/* ======== Status Color System ======== */
select option[value="Pending"] {
    background: #fffbeb;
    color: #d97706;
}

select option[value="Processing"] {
    background: #eff6ff;
    color: #1d4ed8;
}

select option[value="Shipped"] {
    background: #f5f3ff;
    color: #7c3aed;
}

select option[value="Delivered"] {
    background: #ecfdf5;
    color: #059669;
}

select option[value="Cancelled"] {
    background: #fef2f2;
    color: #dc2626;
}

/* ======== Data Highlights ======== */
td:nth-child(3) {
    font-weight: 700;
    color: #0f172a;
    font-family: 'Inter', system-ui, sans-serif;
    position: relative;
    padding-left: 1.5rem;
}

td:nth-child(3)::before {
    content: '₹';
    position: absolute;
    left: 0.5rem;
    color: #64748b;
    font-weight: 400;
}

td:nth-child(5) {
    color: #64748b;
    font-size: 0.875rem;
    font-family: 'Roboto Mono', monospace;
}

/* ======== Interactive Elements ======== */
tr:hover td {
    background: #f8fafc;
}

tr:hover .form-select {
    background: white;
    border-color: #bfdbfe;
}

/* ======== Mobile Responsiveness ======== */
@@media (max-width: 768px) {
    .container {
        padding: 1.5rem;
        border-radius: 16px;
    }
    
    .table-responsive {
        border-radius: 12px;
        box-shadow: 0 2px 12px rgba(0,0,0,0.05);
    }
    
    .table-dark th,
    .table-bordered td {
        padding: 1rem;
    }
    
    .form-select {
        min-width: 140px;
    }
}

@@media (max-width: 576px) {
    .d-inline.w-auto {
        display: block !important;
        width: 100% !important;
        margin-bottom: 0.75rem;
    }
    
    .ms-2 {
        margin-left: 0 !important;
        margin-top: 0.75rem;
    }
    
    .btn {
        width: 100%;
        margin-bottom: 0.5rem;
    }
    
    .table-dark th::after {
        left: 1rem;
        right: 1rem;
    }
}

/* ======== Floating Action Effect ======== */
.table-hover tbody tr {
    position: relative;
    z-index: 0;
}

/* ======== Order Number Styling ======== */
td:first-child {
    font-weight: 600;
    color: #1e293b;
    font-family: 'Roboto Mono', monospace;
    letter-spacing: -0.025em;
}

/* ======== Smooth Transitions ======== */
* {
    transition: background-color 0.3s ease, border-color 0.3s ease;
}
</style>
@section Scripts {
    <script>
        // ======== Animated Status Updates ========
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                const submitBtn = form.querySelector('button[type="submit"]');
                const originalBtnContent = submitBtn.innerHTML;
                const formData = new FormData(form);

                // Add loading state
                submitBtn.innerHTML = `
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Updating...
                `;
                submitBtn.disabled = true;

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData
                    });

                    if (response.ok) {
                        // Success animation
                        submitBtn.innerHTML = `
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"/>
                            </svg>
                            Success!
                        `;
                        submitBtn.classList.remove('btn-primary');
                        submitBtn.classList.add('btn-success');

                        // Show floating toast notification
                        showToast('Status updated successfully!', 'success');

                        // Reset button after delay
                        setTimeout(() => {
                            submitBtn.innerHTML = originalBtnContent;
                            submitBtn.classList.remove('btn-success');
                            submitBtn.classList.add('btn-primary');
                            submitBtn.disabled = false;
                        }, 2000);

                        // Add visual confirmation to row
                        const row = form.closest('tr');
                        row.classList.add('update-confirmed');
                        setTimeout(() => row.classList.remove('update-confirmed'), 3000);

                    } else {
                        throw new Error('Update failed');
                    }
                } catch (error) {
                    submitBtn.innerHTML = `
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                        </svg>
                        Failed
                    `;
                    submitBtn.classList.remove('btn-primary');
                    submitBtn.classList.add('btn-danger');

                    showToast('Update failed. Please try again.', 'error');

                    setTimeout(() => {
                        submitBtn.innerHTML = originalBtnContent;
                        submitBtn.classList.remove('btn-danger');
                        submitBtn.classList.add('btn-primary');
                        submitBtn.disabled = false;
                    }, 2000);
                }
            });
        });

        // ======== Toast Notification System ========
        function showToast(message, type) {
            const toast = document.createElement('div');
            toast.className = `toast-notification ${type}`;
            toast.innerHTML = `
                <div class="toast-icon">
                    ${type === 'success' ?
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/></svg>' :
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill" viewBox="0 0 16 16"><path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/></svg>'}
                </div>
                <div class="toast-message">${message}</div>
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                toast.classList.add('show');
                setTimeout(() => {
                    toast.classList.remove('show');
                    setTimeout(() => toast.remove(), 300);
                }, 3000);
            }, 10);
        }

        // ======== CSS for JavaScript Components ========
        const style = document.createElement('style');
        style.textContent = `
        /* Toast Notifications */
        .toast-notification {
            position: fixed;
            bottom: 30px;
            right: 30px;
            background: white;
            padding: 18px 24px;
            border-radius: 12px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.12);
            display: flex;
            align-items: center;
            gap: 16px;
            transform: translateY(100px);
            opacity: 0;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 1000;
        }

        .toast-notification.show {
            transform: translateY(0);
            opacity: 1;
        }

        .toast-notification.success {
            border-left: 4px solid #10b981;
        }

        .toast-notification.error {
            border-left: 4px solid #ef4444;
        }

        .toast-icon svg {
            width: 24px;
            height: 24px;
        }

        .toast-icon .bi-check-circle-fill {
            color: #10b981;
        }

        .toast-icon .bi-exclamation-triangle-fill {
            color: #ef4444;
        }

        /* Row Confirmation Animation */
        .update-confirmed {
            position: relative;
            overflow: hidden;
        }

        .update-confirmed::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(16, 185, 129, 0.08);
            z-index: -1;
            animation: fadeOut 3s forwards;
        }

        @@keyframes fadeOut {
            to { opacity: 0; }
        }

        /* Spinner Animation */
        .spinner-border {
            vertical-align: -0.125em;
            border: 0.2em solid currentColor;
            border-right-color: transparent;
        }
        `;
        document.head.appendChild(style);
    </script>

    
}

@* <style>
  
/* ======== Core Styles ======== */
.container {
    max-width: 1200px;
    padding: 2rem 1.5rem;
    background: #fff;
    border-radius: 16px;
    box-shadow: 0 4px 24px rgba(0,0,0,0.08);
    margin-top: 2rem;
    margin-bottom: 3rem;
}

h2 {
    font-weight: 700;
    color: #1e293b;
    letter-spacing: -0.025em;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 2px solid #e2e8f0;
}

/* ======== Table Styling ======== */
.table {
    border-collapse: separate;
    border-spacing: 0;
    margin: 0;
    width: 100%;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 2px 12px rgba(0,0,0,0.05);
}

.table-dark {
    background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);
    color: white;
}

.table-dark th {
    font-weight: 600;
    letter-spacing: 0.03em;
    padding: 1rem;
    border: none;
}

.table-hover tbody tr:hover {
    background-color: #f8fafc;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    transition: all 0.2s ease;
}

.table-bordered td {
    border: 1px solid #f1f5f9;
    padding: 1rem;
    vertical-align: middle;
}

/* ======== Status Form Elements ======== */
.form-select {
    border-radius: 8px;
    border: 1px solid #e2e8f0;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    transition: all 0.2s;
    background-color: #f8fafc;
    cursor: pointer;
}

.form-select:focus {
    border-color: #60a5fa;
    box-shadow: 0 0 0 3px rgba(96,165,250,0.2);
    outline: none;
}

.form-select option {
    padding: 0.5rem 1rem;
}

/* ======== Action Buttons ======== */
.btn {
    font-weight: 500;
    letter-spacing: 0.025em;
    padding: 0.5rem 1rem;
    border-radius: 8px;
    transition: all 0.2s;
    box-shadow: 0 1px 2px rgba(0,0,0,0.05);
}

.btn-sm {
    padding: 0.35rem 0.75rem;
    font-size: 0.8125rem;
}

.btn-primary {
    background: linear-gradient(135deg, #3b82f6 0%, #2563eb 100%);
    border: none;
}

.btn-primary:hover {
    background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
    transform: translateY(-1px);
}

.btn-info {
    background: linear-gradient(135deg, #38bdf8 0%, #0ea5e9 100%);
    border: none;
    color: white;
}

.btn-info:hover {
    background: linear-gradient(135deg, #0ea5e9 0%, #0284c7 100%);
}

/* ======== Status Indicator Colors ======== */
select option[value="Pending"] {
    color: #f59e0b;
    font-weight: 500;
}

select option[value="Processing"] {
    color: #3b82f6;
    font-weight: 500;
}

select option[value="Shipped"] {
    color: #8b5cf6;
    font-weight: 500;
}

select option[value="Delivered"] {
    color: #10b981;
    font-weight: 500;
}

select option[value="Cancelled"] {
    color: #ef4444;
    font-weight: 500;
}

/* ======== Interactive Elements ======== */
.form-select:focus + .btn-primary {
    background: #1d4ed8;
}

.btn-group .btn {
    margin-right: 0.5rem;
}

/* ======== Hover Effects ======== */
tr:hover .form-select {
    background-color: #fff;
    border-color: #bfdbfe;
}

tr:hover .btn {
    transform: translateY(-1px);
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
}

/* ======== Responsive Design ======== */
@@media (max-width: 768px) {
    .container {
        padding: 1.5rem 1rem;
        border-radius: 12px;
    }
    
    .table-responsive {
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }
    
    .table-dark th,
    .table-bordered td {
        padding: 0.75rem;
    }
    
    .btn {
        padding: 0.375rem 0.75rem;
    }
}

@@media (max-width: 576px) {
    .d-inline.w-auto {
        display: block !important;
        width: 100% !important;
        margin-bottom: 0.5rem;
    }
    
    .ms-2 {
        margin-left: 0 !important;
        margin-top: 0.5rem;
    }
    
    .btn-group .btn {
        margin-bottom: 0.5rem;
        margin-right: 0;
        display: block;
        width: 100%;
    }
}

/* ======== Modern Table Scroll ======== */
.table-responsive {
    border-radius: 12px;
}

/* ======== Currency Styling ======== */
td:nth-child(3) {
    font-weight: 600;
    color: #1e293b;
    font-family: 'Segoe UI', system-ui, sans-serif;
}

/* ======== Date Formatting ======== */
td:nth-child(5) {
    color: #64748b;
    font-size: 0.875rem;
}

/* ======== User ID Formatting ======== */
td:nth-child(2) {
    font-family: 'SF Mono', monospace;
    color: #475569;
    font-size: 0.875rem;
}
</style> *@

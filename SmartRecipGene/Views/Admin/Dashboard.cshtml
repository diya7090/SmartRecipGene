@* @model dynamic
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="admin-container">
    <h2>Admin Dashboard</h2>

    <div class="dashboard-summary">
        <div class="summary-box">
            <h3>Total Users</h3>
            <p>@Model.TotalUsers</p>
            <span class="trend">+12% <i class="fas fa-arrow-up"></i></span>
        </div>
        <div class="summary-box">
            <h3>Total Recipes</h3>
            <p>@Model.TotalRecipes</p>
            <span class="trend">+8% <i class="fas fa-arrow-up"></i></span>
        </div>
        <div class="summary-box">
            <h3>Users with Lists</h3>
            <p>@Model.ShoppingListUsers</p>
            <span class="trend">+5% <i class="fas fa-arrow-up"></i></span>
        </div>
    </div>

    <div class="table-container">
        <div class="table-header">
            <h3>Top-Rated Recipes</h3>
            <div class="filter-options">
                <select class="form-control">
                    <option>All Sources</option>
                    <option>User Created</option>
                    <option>External</option>
                </select>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Average Rating</th>
                    <th>Source</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var recipe in Model.TopRatedRecipes)
                {
                    <tr>
                        <td>@recipe.Title</td>
                        <td>
                            <div class="rating">
                                @for (int i = 0; i < Math.Floor(recipe.AvgRating); i++)
                                {
                                    <i class="fas fa-star"></i>
                                }
                                @if (recipe.AvgRating % 1 >= 0.5)
                                {
                                    <i class="fas fa-star-half-alt"></i>
                                }
                                <span class="rating-number">@recipe.AvgRating</span>
                            </div>
                        </td>
                        <td>
                            <span class="source-badge @(recipe.SourceType.ToLower())">@recipe.SourceType</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

    <style>
        /* Enhanced Admin Dashboard Styles */
:root {
  --primary: #E67E22;
  --primary-light: rgba(230, 126, 34, 0.1);
  --primary-dark: #d35400;
  --text-dark: #2c3e50;
  --text-light: #7f8c8d;
  --success: #2ecc71;
  --info: #3498db;
  --warning: #f39c12;
  --danger: #e74c3c;
  --light: #ecf0f1;
  --dark: #34495e;
  --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 8px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 10px 30px rgba(0, 0, 0, 0.15);
  --gradient-primary: linear-gradient(135deg, #E67E22 0%, #f39c12 100%);
  --gradient-dark: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  background-color: #f8f9fa;
  color: var(--text-dark);
  line-height: 1.6;
  margin: 0;
  padding: 0;
}

.admin-container {
  padding: 30px;
  max-width: 1400px;
  margin: 0 auto;
}

h2 {
  font-size: 2.2rem;
  font-weight: 700;
  color: var(--primary);
  margin-bottom: 1.5rem;
  position: relative;
  display: inline-block;
}

h2::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -8px;
  width: 100%;
  height: 4px;
  background: var(--gradient-primary);
  border-radius: 4px;
}

h3 {
  color: var(--text-dark);
  font-weight: 600;
  margin-bottom: 1rem;
  font-size: 1.2rem;
}

/* Dashboard Summary Cards */
.dashboard-summary {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1.5rem;
  margin-bottom: 2.5rem;
}

.summary-box {
  position: relative;
  background: white;
  border-radius: 12px;
  padding: 25px;
  transition: all 0.3s ease;
  box-shadow: var(--shadow-md);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.summary-box::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 6px;
  height: 100%;
  background: var(--gradient-primary);
  border-radius: 6px 0 0 6px;
}

.summary-box:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-lg);
}

.summary-box h3 {
  font-size: 0.95rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  color: var(--text-light);
  margin-bottom: 0.75rem;
  font-weight: 600;
}

.summary-box p {
  position: relative;
  width: 120px;
  height: 120px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 15px 0;
  font-size: 2.2rem;
  font-weight: 700;
  background: var(--light);
  border-radius: 50%;
  box-shadow: 
    inset 5px 5px 10px rgba(0, 0, 0, 0.05),
    inset -5px -5px 10px rgba(255, 255, 255, 0.8),
    3px 3px 6px rgba(0, 0, 0, 0.1);
  border: 6px solid white;
}

.summary-box:nth-child(1) p {
  color: var(--primary);
  background: linear-gradient(135deg, rgba(230, 126, 34, 0.1) 0%, rgba(243, 156, 18, 0.1) 100%);
}

.summary-box:nth-child(2) p {
  color: var(--info);
  background: linear-gradient(135deg, rgba(52, 152, 219, 0.1) 0%, rgba(41, 128, 185, 0.1) 100%);
}

.summary-box:nth-child(3) p {
  color: var(--success);
  background: linear-gradient(135deg, rgba(46, 204, 113, 0.1) 0%, rgba(39, 174, 96, 0.1) 100%);
}

.trend {
  display: flex;
  align-items: center;
  gap: 5px;
  font-size: 0.85rem;
  color: var(--success);
  font-weight: 600;
  margin-top: 5px;
}

.trend i {
  font-size: 0.8rem;
}

/* Table Container Styling */
.table-container {
  background: white;
  border-radius: 12px;
  box-shadow: var(--shadow-md);
  padding: 0;
  overflow: hidden;
  position: relative;
  transition: all 0.3s ease;
}

.table-container:hover {
  box-shadow: var(--shadow-lg);
}

.table-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem 1.5rem 1rem;
  border-bottom: 1px solid #eee;
}

.table-header h3 {
  margin: 0;
  color: var(--primary);
  font-weight: 700;
  font-size: 1.3rem;
}

.filter-options {
  display: flex;
  align-items: center;
}

.filter-options select {
  border-radius: 20px;
  border: 1px solid #e1e1e1;
  padding: 0.5rem 1.5rem;
  background-color: white;
  font-size: 0.9rem;
  color: var(--text-dark);
  box-shadow: var(--shadow-sm);
  cursor: pointer;
  transition: all 0.2s;
}

.filter-options select:hover {
  border-color: var(--primary);
}

.filter-options select:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(230, 126, 34, 0.2);
}

/* Table Styling */
.table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
}

.table thead {
  background-color: var(--primary-light);
}

.table th {
  padding: 1rem 1.5rem;
  text-align: left;
  font-weight: 600;
  color: var(--primary-dark);
  border-bottom: 2px solid var(--primary);
  font-size: 0.9rem;
  letter-spacing: 0.5px;
  text-transform: uppercase;
}

.table td {
  padding: 1.2rem 1.5rem;
  border-bottom: 1px solid #eee;
  color: var(--text-dark);
  font-size: 0.95rem;
  transition: all 0.2s;
}

.table tbody tr {
  transition: all 0.3s ease;
}

.table tbody tr:hover {
  background-color: rgba(230, 126, 34, 0.05);
  transform: translateX(5px);
}

.table tbody tr:last-child td {
  border-bottom: none;
}

/* Rating Stars */
.rating {
  display: flex;
  align-items: center;
  gap: 5px;
}

.rating i {
  color: var(--primary);
  font-size: 0.9rem;
}

.rating .rating-number {
  font-weight: 600;
  padding-left: 5px;
  color: var(--text-dark);
}

/* Source Badge */
.source-badge {
  display: inline-block;
  padding: 6px 12px;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.source-badge.user {
  background-color: rgba(46, 204, 113, 0.1);
  color: var(--success);
}

.source-badge.external {
  background-color: rgba(52, 152, 219, 0.1);
  color: var(--info);
}

/* Custom Scrollbar */
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 10px;
}

::-webkit-scrollbar-thumb {
  background: #ccc;
  border-radius: 10px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--primary);
}

/* Animations */
@@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.dashboard-summary {
  animation: fadeIn 0.5s ease forwards;
}

.table-container {
  animation: fadeIn 0.5s ease 0.2s forwards;
  opacity: 0;
  transform: translateY(10px);
}

/* Responsive Design */
@@media (max-width: 992px) {
  .dashboard-summary {
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
  }
  
  .admin-container {
    padding: 20px;
  }
}

@@media (max-width: 768px) {
  .dashboard-summary {
    grid-template-columns: 1fr;
  }
  
  .filter-options select {
    max-width: 200px;
  }
  
  .table-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 10px;
  }
  
  .admin-container {
    padding: 15px;
  }
  
  h2 {
    font-size: 1.8rem;
  }
}
    </style> *@


   @model dynamic
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="admin-container">

    <div class="progress-container">
        <div class="progress-bar"></div>
    </div>
    <h2 class="text-center  ">Admin Dashboard</h2>
@{
    // Calculate total revenue and total sales from past orders (dynamic-safe)
    double totalRevenue = 0.0;
    int totalSales = 0;
    if (Model.PastOrders != null)
    {
        foreach (var order in Model.PastOrders)
        {
            totalRevenue += (double)order.TotalAmount;
            totalSales++;
        }
    }
}
    <!-- Summary Cards -->
    <div class="dashboard-summary">
        <div class="summary-box">
            <h3>Total Revenue</h3>
            <p>₹@totalRevenue</p>
        </div>
        <div class="summary-box">
            <h3>Total Sales</h3>
              <p>₹@totalSales</p>
        </div>
        <div class="summary-box">
            <h3>Total Users Purchased</h3>
            <p>@Model.TotalUsersPurchased</p>
        </div>
        <div class="summary-box">
            <h3>Orders: Shipped</h3>
            <p>@Model.OrdersShipped</p>
        </div>
        <div class="summary-box">
            <h3>Orders: Processing</h3>
            <p>@Model.OrdersProcessing</p>
        </div>
        <div class="summary-box">
            <h3>Orders: Pending</h3>
            <p>@Model.OrdersPending</p>
        </div>
        <div class="summary-box">
            <h3>Orders: Delivered</h3>
            <p>@Model.OrdersDelivered</p>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="charts-section">
        <div class="chart-container">
            <h3>Recipe Kits Sold</h3>
            <canvas id="kitsSoldChart"></canvas>
        </div>

        <div class="chart-container">
            <h3>Top Rated Recipes</h3>
            <canvas id="topRatedChart"></canvas>
        </div>

        <div class="chart-container">
            <h3>Most Saved Recipes</h3>
            <canvas id="mostSavedChart"></canvas>
        </div>
    </div>

    <!-- All Recipes Table -->
    <div class="table-container">
        <h3>All Recipes</h3>
        <div class="table-wrapper">
            <table class="table">
                <thead>
                    <tr>
                        <th>Recipe Name</th>
                        <th>Category</th>
                        <th>Rating</th>
                        <th>Times Ordered</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var recipe in Model.AllRecipes)
                    {
                        <tr>
                            <td>@recipe.Title</td>
                            <td>@recipe.Category</td>
                            <td>@recipe.AvgRating</td>
                            <td>@recipe.TimesOrdered</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- All Users Table -->
    <div class="table-container">
        <h3>All Users</h3>
        <div class="table-wrapper">
            <table class="table">
                <thead>
                    <tr>
                        <th>User Name</th>
                        <th>Email</th>
                        <th>Orders Placed</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.AllUsers)
                    {
                        <tr>
                            <td>@user.Name</td>
                            <td>@user.Email</td>
                            <td>@user.OrdersPlaced</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>
<style>
    /* Modern & Trendy Admin Dashboard CSS - 2025 Design */
@@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

:root {
  --primary: #6366f1;
  --primary-light: #818cf8;
  --primary-dark: #4f46e5;
  --secondary: #14b8a6;
  --success: #10b981;
  --warning: #f59e0b;
  --danger: #ef4444;
  --info: #3b82f6;
  --light: #f9fafb;
  --dark: #1f2937;
  --gray-50: #f9fafb;
  --gray-100: #f3f4f6;
  --gray-200: #e5e7eb;
  --gray-300: #d1d5db;
  --gray-400: #9ca3af;
  --gray-500: #6b7280;
  --gray-600: #4b5563;
  --gray-700: #374151;
  --gray-800: #1f2937;
  --gray-900: #111827;
  --radius: 1rem;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* Base Styles */
body {
  font-family: 'Inter', sans-serif;
  background-color: var(--gray-100);
  color: var(--gray-800);
  line-height: 1.6;
  margin: 0;
  padding: 0;
}

.admin-container {
  max-width: 1400px;
  margin: 1.5rem auto;
  padding: 2rem;
  background: var(--light);
  border-radius: var(--radius);
  box-shadow: var(--shadow-lg);
  animation: fadeIn 0.5s ease-out;
}

@@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

h2 {
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--gray-900);
  margin-bottom: 2rem;
  display: inline-block;
  position: relative;
}

h2::after {
  content: "";
  position: absolute;
  bottom: -10px;
  left: 0;
  width: 50%;
  height: 4px;
  background: linear-gradient(90deg, var(--primary), var(--primary-light));
  border-radius: 2px;
  animation: slideRight 1s ease-out forwards;
}

@@keyframes slideRight {
  from { width: 0; }
  to { width: 50%; }
}

h3 {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--gray-700);
  margin-bottom: 1rem;
}

/* Dashboard Summary Cards */
.dashboard-summary {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
  gap: 1.5rem;
  margin-bottom: 3rem;
}

.summary-box {
  background: white;
  border-radius: var(--radius);
  padding: 1.5rem;
  position: relative;
  overflow: hidden;
  box-shadow: var(--shadow);
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 130px;
}

.summary-box::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: linear-gradient(90deg, var(--primary), var(--primary-light));
  transform: scaleX(0);
  transform-origin: 0 0;
  transition: transform 0.3s ease;
}

.summary-box:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-md);
}

.summary-box:hover::before {
  transform: scaleX(1);
}

/* Individual card colors */
.summary-box:nth-child(1)::before { background: linear-gradient(90deg, var(--primary), var(--primary-light)); }
.summary-box:nth-child(2)::before { background: linear-gradient(90deg, var(--info), #60a5fa); }
.summary-box:nth-child(3)::before { background: linear-gradient(90deg, var(--success), #34d399); }
.summary-box:nth-child(4)::before { background: linear-gradient(90deg, #8b5cf6, #a78bfa); }
.summary-box:nth-child(5)::before { background: linear-gradient(90deg, #ec4899, #f472b6); }
.summary-box:nth-child(6)::before { background: linear-gradient(90deg, var(--warning), #fbbf24); }
.summary-box:nth-child(7)::before { background: linear-gradient(90deg, var(--secondary), #5eead4); }

.summary-box h3 {
  font-size: 0.875rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  color: var(--gray-500);
  margin-bottom: 0.5rem;
  position: relative;
}

.summary-box p {
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--gray-900);
  margin: 0;
  padding: 0;
}

/* Charts Section */
.charts-section {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  margin: 2rem 0;
}

@@media (max-width: 992px) {
  .charts-section {
    grid-template-columns: 1fr;
  }
}

.chart-container {
  background: white;
  border-radius: var(--radius);
  padding: 1.5rem;
  box-shadow: var(--shadow);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  min-height: 350px;
  animation: slideUp 0.6s ease-out forwards;
}

@@keyframes slideUp {
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}

.chart-container:hover {
  box-shadow: var(--shadow-md);
}

.chart-container h3 {
  margin-bottom: 1.5rem;
  padding-bottom: 0.75rem;
  border-bottom: 1px solid var(--gray-200);
  font-weight: 600;
  color: var(--gray-800);
  display: flex;
  align-items: center;
  position: relative;
}

.chart-container h3::before {
  content: "";
  display: inline-block;
  width: 12px;
  height: 12px;
  background: var(--primary);
  border-radius: 50%;
  margin-right: 0.5rem;
}

.charts-section canvas {
  width: 100% !important;
  height: 280px !important;
}

/* Make each chart title have a different indicator color */
.charts-section .chart-container:nth-child(1) h3::before { background: var(--primary); }
.charts-section .chart-container:nth-child(2) h3::before { background: var(--success); }
.charts-section .chart-container:nth-child(3) h3::before { background: var(--warning); }

/* Tables Styling */
.table-container {
  background: white;
  border-radius: var(--radius);
  padding: 1.5rem;
  box-shadow: var(--shadow);
  margin: 2rem 0;
  overflow: hidden;
  animation: fadeIn 0.8s ease-out forwards;
  animation-delay: 0.2s;
  opacity: 0;
}

.table-container h3 {
  margin-bottom: 1.5rem;
  padding-bottom: 0.75rem;
  border-bottom: 1px solid var(--gray-200);
  font-weight: 600;
  color: var(--gray-800);
}

.table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  margin-bottom: 1rem;
}

.table thead th {
  background-color: var(--gray-100);
  color: var(--gray-700);
  font-weight: 600;
  text-align: left;
  padding: 1rem;
  font-size: 0.875rem;
  border-bottom: 2px solid var(--gray-200);
  position: sticky;
  top: 0;
  z-index: 10;
}

.table tbody tr {
  transition: all 0.2s ease;
  border-bottom: 1px solid var(--gray-200);
}

.table tbody tr:last-child {
  border-bottom: none;
}

.table tbody tr:hover {
  background-color: var(--gray-50);
}

.table td {
  padding: 1rem;
  font-size: 0.95rem;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: var(--gray-100);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: var(--gray-400);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--gray-500);
}

/* Chart legends */
.chart-legend {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  gap: 1rem;
  margin-top: 1rem;
}

.legend-item {
  display: flex;
  align-items: center;
  font-size: 0.85rem;
  color: var(--gray-600);
}

.legend-color {
  width: 12px;
  height: 12px;
  border-radius: 2px;
  margin-right: 0.5rem;
}

/* Progress indicator for load animations */
.progress-container {
  width: 100%;
  height: 4px;
  background: var(--gray-200);
  margin-bottom: 2rem;
  border-radius: 2px;
  overflow: hidden;
}

.progress-bar {
  height: 100%;
  background: linear-gradient(90deg, var(--primary), var(--primary-light));
  width: 0;
  animation: loadProgress 1.5s ease-out forwards;
}

@@keyframes loadProgress {
  from { width: 0; }
  to { width: 100%; }
}

/* Responsive fixes */
@@media (max-width: 768px) {
  .admin-container {
    padding: 1.5rem;
  }
  
  .dashboard-summary {
    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
    gap: 1rem;
  }
  
  .summary-box {
    height: auto;
    padding: 1.25rem;
  }
  
  .summary-box p {
    font-size: 1.5rem;
  }
  
  .table-container {
    padding: 1rem;
  }
  
  .table td, .table th {
    padding: 0.75rem;
  }
}

/* Apply additional styling to charts section for improved layout */
.charts-section {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: 2rem;
}

/* Clear display for charts to avoid overlap */
#kitsSoldChart, 
#topRatedChart, 
#mostSavedChart {
  display: block;
  width: 100%;
  height: 280px;
}

/* Add this to your HTML to wrap each chart in its own container */
.charts-section::before {
  content: "";
  display: none;
}

/* Animation for chart loading */
@@keyframes chartLoad {
  0% { opacity: 0; transform: scale(0.9); }
  100% { opacity: 1; transform: scale(1); }
}

.charts-section canvas {
  animation: chartLoad 0.8s ease-out forwards;
  animation-delay: 0.3s;
  opacity: 0;
}

/* Add descriptive icons next to summary box titles */
.summary-box h3::before {
  font-family: "Font Awesome 5 Free";
  margin-right: 0.5rem;
  font-weight: 900;
}

/* Wrap tables in containers for better scrolling */
.table-wrapper {
  overflow-x: auto;
  border-radius: var(--radius);
  max-height: 500px;
  overflow-y: auto;
}
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Example: Kits Sold Chart
        var ctx1 = document.getElementById('kitsSoldChart').getContext('2d');
        var kitsSoldChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.KitsSoldLabels)),
                datasets: [{
                    label: 'Kits Sold',
                    data: @Html.Raw(Json.Serialize(Model.KitsSoldData)),
                    backgroundColor: 'rgba(230, 126, 34, 0.7)'
                }]
            }
        });

        // Example: Top Rated Recipes Chart
        var ctx2 = document.getElementById('topRatedChart').getContext('2d');
        var topRatedChart = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TopRatedLabels)),
                datasets: [{
                    label: 'Avg Rating',
                    data: @Html.Raw(Json.Serialize(Model.TopRatedData)),
                    backgroundColor: 'rgba(52, 152, 219, 0.7)'
                }]
            }
        });

        // Example: Most Saved Recipes Chart
        var ctx3 = document.getElementById('mostSavedChart').getContext('2d');
        var mostSavedChart = new Chart(ctx3, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.MostSavedLabels)),
                datasets: [{
                    label: 'Saves',
                    data: @Html.Raw(Json.Serialize(Model.MostSavedData)),
                    backgroundColor: 'rgba(46, 204, 113, 0.7)'
                }]
            }
        });
    </script>
   
}